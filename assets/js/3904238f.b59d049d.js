"use strict";(self.webpackChunkwelldone_docs=self.webpackChunkwelldone_docs||[]).push([[2153],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return p}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=l(n),p=o,f=m["".concat(s,".").concat(p)]||m[p]||u[p]||i;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},52991:function(e,t,n){n.d(t,{Z:function(){return y}});var r=n(67294),o=n(34334),i=n(54951),a=n(39960),c=n(13919),s=n(95999),l="cardContainer_fWXF",d="cardTitle_rnsV",u="cardDescription_PWke";function m(e){var t=e.href,n=e.children;return r.createElement(a.Z,{href:t,className:(0,o.Z)("card padding--lg",l)},n)}function p(e){var t=e.href,n=e.icon,i=e.title,a=e.description;return r.createElement(m,{href:t},r.createElement("h2",{className:(0,o.Z)("text--truncate",d),title:i},n," ",i),a&&r.createElement("p",{className:(0,o.Z)("text--truncate",u),title:a},a))}function f(e){var t,n=e.item,o=(0,i.Wl)(n);return o?r.createElement(p,{href:o,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:null!=(t=n.description)?t:(0,s.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n.items.length})}):null}function h(e){var t,n,o=e.item,a=(0,c.Z)(o.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",s=(0,i.xz)(null!=(t=o.docId)?t:void 0);return r.createElement(p,{href:o.href,icon:a,title:o.label,description:null!=(n=o.description)?n:null==s?void 0:s.description})}function g(e){var t=e.item;switch(t.type){case"link":return r.createElement(h,{item:t});case"category":return r.createElement(f,{item:t});default:throw new Error("unknown item type "+JSON.stringify(t))}}function v(e){var t=e.className,n=(0,i.jA)();return r.createElement(y,{items:n.items,className:t})}function y(e){var t=e.items,n=e.className;if(!t)return r.createElement(v,e);var a=(0,i.MN)(t);return r.createElement("section",{className:(0,o.Z)("row",n)},a.map((function(e,t){return r.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},r.createElement(g,{item:e}))})))}},47360:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(83117),o=n(80102),i=(n(67294),n(3905)),a=n(52991),c=n(54951),s=["components"],l={slug:"/code",sidebar_position:4,title:"Code",description:"Developing smart contracts in multi-chain environments with WELLDONE Code"},d="Code",u={unversionedId:"code/index",id:"code/index",title:"Code",description:"Developing smart contracts in multi-chain environments with WELLDONE Code",source:"@site/docs/code/index.md",sourceDirName:"code",slug:"/code",permalink:"/code",draft:!1,editUrl:"https://github.com/welldonestudio/welldonestudio.github.io/tree/master/docs/code/index.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{slug:"/code",sidebar_position:4,title:"Code",description:"Developing smart contracts in multi-chain environments with WELLDONE Code"},sidebar:"tutorialSidebar",previous:{title:"Solana",permalink:"/add-chain/developer-guide/solana"},next:{title:"Getting Started",permalink:"/code/getting-started"}},m={},p=[{value:"Start a multi-chain voyage with the <strong>WELLDONE Code</strong>!",id:"start-a-multi-chain-voyage-with-the-welldone-code",level:4}],f={toc:p};function h(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"code"},"Code"),(0,i.kt)("p",null,"Since the smart contract development environment differs from networks, developers must reconstruct the development environment whenever the targeted network changes. It puts a lot of pressure on Web3 voyagers who are trying to navigate the new chain. As a result, WELLDONE Studio now offers ",(0,i.kt)("strong",{parentName:"p"},"WELLDONE Code"),", which allows developers who want to navigate the multi-chain to focus entirely on developing and testing smart contracts without having to worry about the complex development environment."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"WELLDONE Code")," is a ",(0,i.kt)("strong",{parentName:"p"},"Remix IDE Plugin"),". ",(0,i.kt)("a",{parentName:"p",href:"https://remix-project.org/"},"Remix")," is a web-based Integrated Development Environment (IDE) for the Solidity programming language, which is used to write smart contracts for the Ethereum blockchain. Remix allows developers to write, test, and debug EVM-based smart contracts in a convenient and user-friendly interface. Using ",(0,i.kt)("strong",{parentName:"p"},"WELLDONE Code"),", developers can easily develop and test smart contracts in Remix IDE for non-EVM networks such as NEAR and Cosmos, in addition to EVM-compatible networks."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"WELLDONE Code")," is a wonderful tool for onboarding developers in any blockchain ecosystem since it allows them to write smart contracts without the need for building a separate development environment."),(0,i.kt)("h4",{id:"start-a-multi-chain-voyage-with-the-welldone-code"},"Start a multi-chain voyage with the ",(0,i.kt)("strong",{parentName:"h4"},"WELLDONE Code"),"!"),(0,i.kt)(a.Z,{items:(0,c.jA)().items,mdxType:"DocCardList"}))}h.isMDXComponent=!0}}]);