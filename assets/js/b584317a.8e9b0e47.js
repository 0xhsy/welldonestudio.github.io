"use strict";(self.webpackChunkwelldone_docs=self.webpackChunkwelldone_docs||[]).push([[952],{3905:function(n,e,r){r.d(e,{Zo:function(){return p},kt:function(){return m}});var t=r(7294);function a(n,e,r){return e in n?Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[e]=r,n}function o(n,e){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.push.apply(r,t)}return r}function i(n){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(n,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))}))}return n}function l(n,e){if(null==n)return{};var r,t,a=function(n,e){if(null==n)return{};var r,t,a={},o=Object.keys(n);for(t=0;t<o.length;t++)r=o[t],e.indexOf(r)>=0||(a[r]=n[r]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)r=o[t],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(a[r]=n[r])}return a}var c=t.createContext({}),s=function(n){var e=t.useContext(c),r=e;return n&&(r="function"==typeof n?n(e):i(i({},e),n)),r},p=function(n){var e=s(n.components);return t.createElement(c.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},u=t.forwardRef((function(n,e){var r=n.components,a=n.mdxType,o=n.originalType,c=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),u=s(r),m=a,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?t.createElement(f,i(i({ref:e},p),{},{components:r})):t.createElement(f,i({ref:e},p))}));function m(n,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=n,l.mdxType="string"==typeof n?n:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},306:function(n,e,r){r.r(e),r.d(e,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var t=r(3117),a=r(102),o=(r(7294),r(3905)),i=["components"],l={},c=void 0,s={unversionedId:"add-chain/Solana",id:"add-chain/Solana",title:"Solana",description:"Solana params",source:"@site/docs/add-chain/Solana.md",sourceDirName:"add-chain",slug:"/add-chain/Solana",permalink:"/docs/add-chain/Solana",draft:!1,editUrl:"https://github.com/welldonestudio/welldonestudio.github.io/docs/add-chain/Solana.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ethereum",permalink:"/docs/add-chain/Ethereum"},next:{title:"Provider API",permalink:"/docs/provider-api"}},p={},d=[{value:"Solana params",id:"solana-params",level:2},{value:"Example",id:"example",level:2}],u={toc:d};function m(n){var e=n.components,r=(0,a.Z)(n,i);return(0,o.kt)("wrapper",(0,t.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"solana-params"},"Solana params"),(0,o.kt)("p",null,"Solana \uae30\ubc18\uc758 \ub124\ud2b8\uc6cc\ud06c, \ud639\uc740 \uadf8 \uc678\uc758 \ub124\ud2b8\uc6cc\ud06c\ub97c \ucd94\uac00\ud558\uace0\uc790 \ud560 \ub54c\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"params"),"\uc5d0 \ub2e4\uc74c\uc758 \uac1d\uccb4\ub97c \uc778\uc790\ub85c \ub118\uaca8\uc90d\ub2c8\ub2e4. \uc774\ub294 WELLDONE Wallet\uc5d0\uc11c \uc81c\uc548\ud558\ub294 Universal Chain \ud45c\uc900\uc785\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Solana"',title:'"Solana"'},"interface RpcUrl {\n  providerName: string;\n  url: string;\n}\n\ninterface Currency {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address?: string;\n}\n\ninterface ExplorerUrl {\n  name: string;\n  url: string;\n  standard?: string;\n}\n\ninterface ChainData {\n  chainId: string;\n  chainName: string;\n  rpcUrls: Array<RpcUrl>;\n  nativeCurrencies: Array<Currency>;\n  feeCurrencies: Array<Currency>;\n  // (Optional)\n  blockExplorerUrls: Array<ExplorerUrl>;\n  // (Optional)\n  iconUrls: Array<string>;\n  slip44: string;\n}\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"Solana Devnet \ub124\ud2b8\uc6cc\ud06c\ub97c \ucd94\uac00\ud574\ubcf4\ub294 \uc608\uc81c\ub97c \uac19\uc774 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n",(0,o.kt)("inlineCode",{parentName:"p"},"Add Chain")," \ubc84\ud2bc\uc744 \ub20c\ub7ec WELLDONE Wallet\uc5d0 Solana Devnet \ub124\ud2b8\uc6cc\ud06c\ub97c \ucd94\uac00\ud574\ubcf4\uc138\uc694. ",(0,o.kt)("inlineCode",{parentName:"p"},"dapp:addChain")," \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uae30 \uc804\uc5d0 ",(0,o.kt)("inlineCode",{parentName:"p"},"dapp:accounts")," \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \uba3c\uc800 \uc9c0\uac11\uc5d0 \uc5f0\uacb0\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function addChain() {\n  const chainData = {\n    chainId: "devnet",\n    chainName: "Solana Devnet",\n    rpcUrls: [\n      {\n        providerName: "All That Node",\n        url: "https://solana-devnet-rpc.allthatnode.com/"\n      }\n    ],\n    nativeCurrencies: [\n      {\n        name: "Solana",\n        symbol: "SOL",\n        decimals: 18\n      }\n    ],\n    feeCurrencies: [\n      {\n        name: "Solana",\n        symbol: "SOL",\n        decimals: 18\n      }\n    ],\n    blockExplorerUrls: [\n      {\n        name: "Solana Devnet Explorer",\n        url: "https://explorer.solana.com/?cluster=devnet"\n      }\n    ],\n    iconUrls: [],\n    slip44: "501"\n  };\n\n  async function addChain() {\n    // before adding chain to wallet, you should connect to wallet first\n    const accounts = await window.dapp.request("solana", {\n      method: "dapp:accounts"\n    });\n    // add chain to wallet\n    const response = await window.dapp.request("solana", {\n      method: "dapp:addChain",\n      params: [chainData]\n    });\n  }\n  return <Button onClick={addChain}>Add Chain</Button>;\n}\n')))}m.isMDXComponent=!0}}]);