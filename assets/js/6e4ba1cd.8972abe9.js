"use strict";(self.webpackChunkwelldone_docs=self.webpackChunkwelldone_docs||[]).push([[500],{3905:function(n,e,t){t.d(e,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function c(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},s=Object.keys(n);for(a=0;a<s.length;a++)t=s[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(a=0;a<s.length;a++)t=s[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var i=a.createContext({}),l=function(n){var e=a.useContext(i),t=e;return n&&(t="function"==typeof n?n(e):c(c({},e),n)),t},p=function(n){var e=l(n.components);return a.createElement(i.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,s=n.originalType,i=n.parentName,p=o(n,["components","mdxType","originalType","parentName"]),d=l(t),m=r,f=d["".concat(i,".").concat(m)]||d[m]||u[m]||s;return t?a.createElement(f,c(c({ref:e},p),{},{components:t})):a.createElement(f,c({ref:e},p))}));function m(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var s=t.length,c=new Array(s);c[0]=d;var o={};for(var i in e)hasOwnProperty.call(e,i)&&(o[i]=e[i]);o.originalType=n,o.mdxType="string"==typeof n?n:r,c[1]=o;for(var l=2;l<s;l++)c[l]=t[l];return a.createElement.apply(null,c)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2855:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return u}});var a=t(7462),r=t(3366),s=(t(7294),t(3905)),c=["components"],o={},i=void 0,l={unversionedId:"Sending Transactions/Near",id:"Sending Transactions/Near",title:"Near",description:"\uc774 \ud30c\ud2b8\uc5d0\uc11c\ub294 near \ud2b8\ub79c\uc81d\uc158 \uc804\uc1a1\uc744 dapp.request\ub97c \ud1b5\ud574 \uc2dc\uc791\ud558\ub294 \ubc29\uc2dd\uc744 \uc18c\uac1c\ud569\ub2c8\ub2e4. \uc774 API\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ub192\uc740 \uc218\uc900\uc758 \ucd94\uc0c1\ud654\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uacf5\uae09\uc790\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0, \ud3b8\uc758 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. WELLDONE Wallet\uc740 dapp \uba54\uc11c\ub4dc\uc758 \ud3b8\ub9ac\ud55c \uc0ac\uc6a9\uc744 \uc704\ud55c \ubc29\ubc95\uc744 \uac15\uad6c \uc911\uc5d0 \uc788\uc2b5\ub2c8\ub2e4.",source:"@site/docs/Sending Transactions/Near.md",sourceDirName:"Sending Transactions",slug:"/Sending Transactions/Near",permalink:"/docs/Sending Transactions/Near",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Sending Transactions/Near.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Klaytn",permalink:"/docs/Sending Transactions/Klaytn"},next:{title:"Deploy and Run",permalink:"/docs/Deploy-and-Run"}},p={},u=[{value:"1. Returns",id:"1-returns",level:2},{value:"2. Params",id:"2-params",level:2},{value:"3. Example",id:"3-example",level:2}],d={toc:u};function m(n){var e=n.components,t=(0,r.Z)(n,c);return(0,s.kt)("wrapper",(0,a.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"\uc774 \ud30c\ud2b8\uc5d0\uc11c\ub294 near \ud2b8\ub79c\uc81d\uc158 \uc804\uc1a1\uc744 ",(0,s.kt)("inlineCode",{parentName:"p"},"dapp.request"),"\ub97c \ud1b5\ud574 \uc2dc\uc791\ud558\ub294 \ubc29\uc2dd\uc744 \uc18c\uac1c\ud569\ub2c8\ub2e4. \uc774 API\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ub192\uc740 \uc218\uc900\uc758 \ucd94\uc0c1\ud654\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uacf5\uae09\uc790\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0, \ud3b8\uc758 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. WELLDONE Wallet\uc740 dapp \uba54\uc11c\ub4dc\uc758 \ud3b8\ub9ac\ud55c \uc0ac\uc6a9\uc744 \uc704\ud55c \ubc29\ubc95\uc744 \uac15\uad6c \uc911\uc5d0 \uc788\uc2b5\ub2c8\ub2e4."))),(0,s.kt)("p",null,"near \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158(dapp, web3 \uc0ac\uc774\ud2b8 \ub4f1)\uc5d0\uc11c \ud2b8\ub79c\uc81d\uc158\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc120 "),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"dapp provider (window.dapp) \uac10\uc9c0"),(0,s.kt)("li",{parentName:"ol"},"\uc0ac\uc6a9\uc790\uac00 \uc5f0\uacb0\ub418\uc5b4 \uc788\ub294 near \ub124\ud2b8\uc6cc\ud06c \uac10\uc9c0"),(0,s.kt)("li",{parentName:"ol"},"\uc0ac\uc6a9\uc790\uc758 near \uacc4\uc815 \uac00\uc838\uc624\uae30")),(0,s.kt)("p",null,"\uc758 \uc804\uc81c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. WELLDONE Wallet\uc5d0\uc11c\ub294 \ud574\ub2f9 \uc9c0\uac11 \uc8fc\uc18c\uc5d0 \uc5f0\uacb0\ub418\uc5b4 \uc788\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \uc790\ub3d9\uc73c\ub85c \uac10\uc9c0\ud558\uc5ec \uac00\uc838\uc635\ub2c8\ub2e4. \ub530\ub77c\uc11c transaction\uc744 \ubcf4\ub0b4\uae30 \uc774\uc804\uc5d0 \uba54\uc778\ub137\uc5d0 \ud2b8\ub79c\uc81d\uc158\uc744 \ubcf4\ub0bc \uac83\uc778\uc9c0, \ud14c\uc2a4\ud2b8\ub137\uc5d0 \ud2b8\ub79c\uc81d\uc158\uc744 \ubcf4\ub0bc \uac83\uc778\uc9c0 \ubbf8\ub9ac \uace0\ub824\ud574\ub450\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud2b8\ub79c\uc81d\uc158\uc740 \uc544\ub798\uc640 \uac19\uc740 \ud3ec\ub9f7\uc744 \ud1b5\ud574 \uc804\uc1a1\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"const response = await dapp.request('near' ,{\n    method: 'dapp:sendTransaction',\n    params: [\n      JSON.stringify(transactionParameters),\n    ]\n  });\nconst txHash = response;\n")),(0,s.kt)("h2",{id:"1-returns"},"1. Returns"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"Promise<string>\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\uc704\uc640 \uac19\uc740 \ud0c0\uc785\uc73c\ub85c transaction hash \uac12\uc744 \ubc18\ud658\ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")),(0,s.kt)("h2",{id:"2-params"},"2. Params"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"type serializedTransaction = string;\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"near\uc5d0\uc11c \ud2b8\ub79c\uc81d\uc158\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc120 ",(0,s.kt)("inlineCode",{parentName:"li"},"serializedTransaction"),"\uc744 params\ub85c \ub118\uaca8\uc57c \ud569\ub2c8\ub2e4. \ud574\ub2f9 \uac12\uc740 ",(0,s.kt)("inlineCode",{parentName:"li"},"near-api-js")," \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ud1b5\ud574 \uc5bb\uc744 \uc218 \uc788\uc73c\uba70, \uc790\uc138\ud55c \uc0ac\uc6a9 \ubc29\uc2dd\uc740 ",(0,s.kt)("a",{parentName:"li",href:"https://docs.near.org/integrator/create-transactions"},"\uc774 \ub9c1\ud06c"),"\uc640 \uc544\ub798\uc758 \uc608\uc2dc\ub97c \ud1b5\ud574 \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ")),(0,s.kt)("h2",{id:"3-example"},"3. Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"import { providers, transactions, utils } from 'near-api-js';\nconst getSerializedTransaction = async ( accounts ) => {\n  const rpc = 'https://rpc.testnet.near.org';\n  const provider = new providers.JsonRpcProvider(rpc);\n  const accountLocal = currentAccount['near'].address;\n  const publicKey = currentAccount['near'].pubKey;\n  const signerId = accountLocal;\n  const accessKey = await provider.query(`access_key/${signerId}/${publicKey}`, '');\n  const actions = [transactions.transfer(new BN(10))];\n  const recentBlockHash = utils.serialize.base_decode(accessKey.block_hash);\n\n  const transaction = transactions.createTransaction(\n    accountLocal,\n    utils.PublicKey.fromString(publicKey),\n    '9bfd12934cd6fdd09199e2e267803c70bd7c6cb40832ac6f29811948dde2b723',\n    accessKey.nonce + 1,\n    actions,\n    recentBlockHash,\n  );\n\n  const bytes = transaction.encode();\n\n  return Buffer.from(bytes).toString('base64');\n};\nconst sendTransaction = async = () => {\n  // get accounts first\n  const accounts = await dapp.request('near', { method: 'dapp:accounts' });\n  const serializedTransaction = await getSerializedTransaction(accounts);\n  // sending a transaction\n    try{\n      const response = await dapp.request('near' ,{\n        method: 'dapp:sendTransaction',\n        params: [\n          // use serialized transaction\n          [`${serializedTransaction}`]\n        ]\n      });\n      const txHash = response;\n    } catch (error) {\n      /* \n        {\n          message: 'User denied transaction signature',\n          code: 4001,\n        }\n      */\n    }\n  }\n")),(0,s.kt)("p",null,"\uc544\ub798\uc758 \uc608\uc81c\ub97c \ud1b5\ud574 \uc2e4\uc81c\ub85c \ud2b8\ub79c\uc81d\uc158\uc744 \uc804\uc1a1\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\uc81c\ub97c \ud1b5\ud574 \ud2b8\ub79c\uc81d\uc158\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc120 near testnet account\uac00 \ud544\uc694\ud558\uba70, faucet\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. faucet\uc740 ",(0,s.kt)("a",{parentName:"p",href:"https://www.allthatnode.com/faucet/near.dsrv"},"\uc774 \ub9c1\ud06c"),"\ub97c \ud1b5\ud574 \ubc1b\uc73c\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4!"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function sendTransaction() {\n  const CHAIN_NAME = 'near';\n  const [accounts, setAccounts] = React.useState(null);\n  const [txHash, setTxHash] = React.useState(null);\n  const getSerializedTransaction = async () => {\n    try {\n      const rpc = 'https://rpc.testnet.near.org';\n      const provider = new providers.JsonRpcProvider(rpc);\n      const signerId = accounts.address;\n      const publicKey = accounts.pubKey;\n\n      const accessKey = await provider.query(`access_key/${signerId}/${publicKey}`, '');\n\n      const actions = [transactions.transfer(new BN(10))];\n      const recentBlockHash = utils.serialize.base_decode(accessKey.block_hash);\n\n      // make transaction\n      const transaction = transactions.createTransaction(\n        signerId, // signerId\n        utils.PublicKey.fromString(publicKey), //pubKey\n        '9bfd12934cd6fdd09199e2e267803c70bd7c6cb40832ac6f29811948dde2b723', // receiver\n        accessKey.nonce + 1, // nonce\n        actions, // actions\n        recentBlockHash, // recentBlockHash\n      );\n      const bytes = transaction.encode();\n\n      return Buffer.from(bytes).toString('base64');\n    } catch (error) {\n      /* error */\n      console.log(error);\n    }\n  };\n\n  async function handleGetAccount() {\n    try {\n      const accounts = await dapp.request(CHAIN_NAME, {\n        method: 'dapp:accounts',\n      });\n\n      setAccounts(accounts[CHAIN_NAME]);\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n  async function handleSendTransaction() {\n    try {\n      const serializedTransaction = await getSerializedTransaction();\n      const response = await dapp.request(CHAIN_NAME, {\n        method: 'dapp:sendTransaction',\n        params: [`${serializedTransaction}`],\n      });\n      const txHash = response;\n\n      setTxHash(txHash);\n    } catch (error) {\n      console.log(error);\n      alert(`Error Message: ${error.message}\\nError Code: ${error.code}`);\n    }\n  }\n\n  return (\n    <>\n      {accounts ? (\n        <>\n          <Button onClick={handleSendTransaction} type=\"button\">\n            Send a Transaction\n          </Button>\n          <ResultTooltip style={{ background: '#3B48DF' }}>\n            <b>Accounts:</b> {accounts.address}\n          </ResultTooltip>\n        </>\n      ) : (\n        <>\n          <Button onClick={handleGetAccount} type=\"button\">\n            Get Account\n          </Button>\n          <div>You have to get account first!</div>\n        </>\n      )}\n      {txHash && (\n        <ResultTooltip style={{ background: '#F08080' }}>\n          <b>Transaction Hash:</b> {txHash}\n        </ResultTooltip>\n      )}\n    </>\n  );\n}\n")))}m.isMDXComponent=!0}}]);