(self.webpackChunkwelldone_docs=self.webpackChunkwelldone_docs||[]).push([[3760],{23518:function(t,e,n){"use strict";n.r(e),n.d(e,{assets:function(){return P},contentTitle:function(){return U},default:function(){return H},frontMatter:function(){return B},metadata:function(){return F},toc:function(){return L}});var r=n(83117),o=n(80102),a=n(67294),c=n(3905),s=(n(48764),n(1017)),i=n(84035),l=n(29127),u=n(53741),d=n(86062),p=n(6033),h=n(49854),m=n(25029),f=n(31126),g=n(92178),v=n(16e3),b=n(6469),k=n(89189),w=n(88e3),y=n(29183),x=n(72389),E=a.createContext(null),S=function(t){var e,r=t.children;console.log("WalletSelectorContextProvider");var o=(0,a.useState)(null),c=o[0],S=o[1],C=(0,a.useState)(null),A=C[0],N=C[1],R=(0,a.useState)([]),W=R[0],I=R[1],T=(0,x.Z)();console.log(window),console.log(window.Buffer),T&&(window.global=window,window.Buffer=window.Buffer||n(48764).Buffer);var _=(0,a.useCallback)((0,i.Z)((0,s.Z)().mark((function t(){var e,n,r;return(0,s.Z)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,(0,d.L1)({network:"testnet",debug:!0,modules:[(0,h.X)(),(0,y.R)(),(0,m.J)(),(0,f.J)(),(0,g.t)(),(0,v.Z)(),(0,b.b)(),(0,w.r)({projectId:"test...",metadata:{name:"NEAR Wallet Selector",description:"Example dApp used by NEAR Wallet Selector",url:"https://github.com/near/wallet-selector",icons:["https://avatars.githubusercontent.com/u/37784886"]}}),(0,k.i)({url:"wss://relay.nightly.app/app",appMetadata:{additionalInfo:"",application:"NEAR Wallet Selector",description:"Example dApp used by NEAR Wallet Selector",icon:"https://near.org/wp-content/uploads/2020/09/cropped-favicon-192x192.png"}})]});case 2:e=t.sent,n=(0,p.D)(e,{contractId:"mycontract.myaccount8.testnet"}),r=e.store.getState(),I(r.accounts),window.selector=e,window.modal=n,S(e),N(n);case 10:case"end":return t.stop()}}),t)}))),[]);if((0,a.useEffect)((function(){_().catch((function(t){console.error(t),alert("Failed to initialise wallet selector")}))}),[_]),(0,a.useEffect)((function(){if(c){var t=c.store.observable.pipe((0,l.U)((function(t){return t.accounts})),(0,u.x)()).subscribe((function(t){console.log("Accounts Update",t),I(t)}));return function(){return t.unsubscribe()}}}),[c]),!c||!A)return null;var Z=(null==(e=W.find((function(t){return t.active})))?void 0:e.accountId)||null;return a.createElement(E.Provider,{value:{selector:c,modal:A,accounts:W,accountId:Z}},r)};var C=n(68447),A="fadeMeAnimation_XH_X",N=C.utils.format.parseNearAmount("0.00000000003"),R=function(t){return a.createElement("button",(0,r.Z)({},t,{style:Object.assign({borderRadius:"8px",padding:"10px 16px",color:"white",background:"#009400",border:"none",cursor:"pointer",fontSize:"14px",marginBottom:"4px"},t.style)}))},W=function(t){return a.createElement("div",(0,r.Z)({},t,{className:A,style:Object.assign({width:"100%",borderRadius:"8px",padding:"16px",color:"white",marginTop:"8px"},t.style)}))},I=function(){var t=function(){var t=(0,a.useContext)(E);if(!t)throw new Error("useWalletSelector must be used within a WalletSelectorContextProvider");return t}(),e=t.selector,n=t.modal,r=t.accounts,o=t.accountId,c=(0,a.useState)(null),l=c[0],u=c[1],d=(0,a.useState)(!1),p=d[0],h=d[1],m=(0,a.useState)(""),f=m[0],g=m[1],v=(0,a.useState)(),b=v[0],k=v[1],w=(0,a.useState)(),y=(w[0],w[1],(0,a.useCallback)((0,i.Z)((0,s.Z)().mark((function t(){var n,r;return(0,s.Z)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(o){t.next=2;break}return t.abrupt("return",null);case 2:return n=e.options.network,r=new C.providers.JsonRpcProvider({url:n.nodeUrl}),t.abrupt("return",r.query({request_type:"view_account",finality:"final",account_id:o}).then((function(t){return Object.assign({},t,{account_id:o})})));case 5:case"end":return t.stop()}}),t)}))),[o,e.options]));(0,a.useEffect)((function(){if(!o)return u(null);h(!0),y().then((function(t){u(t),h(!1)}))}),[o,y]);var x=function(){var t=(0,i.Z)((0,s.Z)().mark((function t(){return(0,s.Z)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.wallet();case 2:t.sent.signOut().catch((function(t){console.log("Failed to sign out"),console.error(t)}));case 4:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),S=function(){var t=(0,i.Z)((0,s.Z)().mark((function t(){var n,r,o,a,c,i;return(0,s.Z)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.options.network,r=e.store.getState(),o=r.contract,a=new C.providers.JsonRpcProvider({url:n.nodeUrl}),t.next=5,a.query({request_type:"call_function",account_id:o.contractId,method_name:"get_num",args_base64:"e30=",finality:"optimistic"});case 5:c=t.sent,i=JSON.parse(Buffer.from(c.result).toString()),k(i);case 8:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),A=(0,a.useCallback)((0,i.Z)((0,s.Z)().mark((function t(){var n,r,a,c;return(0,s.Z)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.store.getState(),r=n.contract,t.next=3,e.wallet();case 3:return a=t.sent,t.next=6,a.signAndSendTransaction({signerId:o,receiverId:r.contractId,actions:[{type:"FunctionCall",params:{methodName:"increment",args:{count:1},gas:N,deposit:C.utils.format.parseNearAmount("0")}}]}).catch((function(t){throw alert("Failed to sending transaction"),console.log("Failed to sending transaction"),t}));case 6:c=t.sent,g(c.transaction.hash);case 8:case"end":return t.stop()}}),t)}))),[e,o]);return p?null:l?a.createElement(a.Fragment,null,a.createElement("div",null,a.createElement(W,{style:{background:"#3B48DF",margin:"10px"}},a.createElement("b",null,"Account:")," ",o),b&&a.createElement(W,{style:{background:"#F08080",margin:"10px"}},a.createElement("b",null,"Count:")," ",b),f&&a.createElement(W,{style:{background:"#F4F4F4",color:"black",margin:"10px"}},a.createElement("b",null,"Transaction Hash:")," ",f),a.createElement(R,{style:{margin:"10px"},onClick:x},"Log out"),a.createElement(R,{style:{marginRight:"10px"},onClick:function(){n.show()}},"Switch Wallet"),r.length>1&&a.createElement(R,{onClick:function(){var t=r.findIndex((function(t){return t.accountId===o})),n=t<r.length-1?t+1:0,a=r[n].accountId;e.setActiveAccount(a),alert("Switched account to "+a)}},"Switch Account"),a.createElement(R,{style:{marginRight:"10px"},onClick:S},"Get Count"),a.createElement(R,{style:{background:"#009400"},onClick:A},"Send a Transaction"))):a.createElement(a.Fragment,null,a.createElement("div",null,a.createElement(R,{onClick:function(){n.show()}},"Log in")))},T=function(){return a.createElement(S,null,a.createElement(I,null))},_=n(91262),Z=["components"],B={title:"Execute the Contract",description:"Execute the Contract using Universal Provider"},U="Execute the Contract in NEAR using Universal Provider",F={unversionedId:"tutorials/near/rust/near-frontend",id:"tutorials/near/rust/near-frontend",title:"Execute the Contract",description:"Execute the Contract using Universal Provider",source:"@site/docs/tutorials/near/rust/near-frontend.mdx",sourceDirName:"tutorials/near/rust",slug:"/tutorials/near/rust/near-frontend",permalink:"/tutorials/near/rust/near-frontend",draft:!1,editUrl:"https://github.com/welldonestudio/welldonestudio.github.io/tree/master/docs/tutorials/near/rust/near-frontend.mdx",tags:[],version:"current",frontMatter:{title:"Execute the Contract",description:"Execute the Contract using Universal Provider"},sidebar:"tutorialSidebar",previous:{title:"Rust Smart Contract in NEAR",permalink:"/tutorials/near/rust/near-contract"},next:{title:"NEAR Ecosystem",permalink:"/tutorials/near-ecosystem/"}},P={},L=[{value:"Introduction",id:"introduction",level:2},{value:"Using Universal Provider",id:"using-universal-provider",level:2},{value:"Using Wallet Selector",id:"using-wallet-selector",level:2}],D={toc:L};function H(t){var e=t.components,n=(0,o.Z)(t,Z);return(0,c.kt)("wrapper",(0,r.Z)({},D,n,{components:e,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"execute-the-contract-in-near-using-universal-provider"},"Execute the Contract in NEAR using Universal Provider"),(0,c.kt)("div",null,(0,c.kt)("span",{className:"author-sm"},"September 8, 2022"),(0,c.kt)("div",{className:"author-div"},(0,c.kt)("div",{className:"author-avatars"},(0,c.kt)("a",{href:"https://github.com/Yoon-Suji",target:"_blank"},(0,c.kt)("img",{src:"https://avatars.githubusercontent.com/u/70956926?v=4"}))),(0,c.kt)("div",null,(0,c.kt)("span",{className:"author-name"},"Suji Yoon"),(0,c.kt)("br",null),(0,c.kt)("span",{className:"author-sm"},"Software Engineer, DSRV ")))),(0,c.kt)("h2",{id:"introduction"},"Introduction"),(0,c.kt)("p",null,"In the previous tutorial, we wrote, deployed, and executed a simple counter smart contract in NEAR using Rust and WELLDONE Code.\nIn this tutorial, we will practice how the frontend and smart contract communicate using the WELLDONE Wallet."),(0,c.kt)("h2",{id:"using-universal-provider"},"Using Universal Provider"),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Universal Provider")," is a middleware that communicates with WELLDONE Wallet, abstracting the requirements of different libraries by blockchain.\nWith ",(0,c.kt)("strong",{parentName:"p"},"Universal Provider"),", builders developing dApps on a multi-chain do not have to manage separate libraries, allowing them to focus entirely on development.\nFor more ",(0,c.kt)("a",{href:"https://docs.welldonestudio.io/wallet/developer-guide/provider-api/how-we-wrap-for-multichain",target:"_blank"},"information")," and ",(0,c.kt)("a",{href:"https://docs.welldonestudio.io/wallet/developer-guide/provider-api/method/",target:"_blank"},"instructions")," on using ",(0,c.kt)("strong",{parentName:"p"},"Universal Provider"),", please refer to the following link."),(0,c.kt)("p",null,"The code below is an example of executing the ",(0,c.kt)("inlineCode",{parentName:"p"},"increment")," method for the contract deployed in the previous tutorial.\nFirst, click the ",(0,c.kt)("inlineCode",{parentName:"p"},"Get Account")," button to connect to the WELLDONE Wallet, and then enter the ID of the contract you deployed.\nYou can search for transaction hashes in ",(0,c.kt)("a",{href:"https://explorer.testnet.near.org/",target:"_blank"},"explorer")," to see if they are successful."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function increment() {\n  const [accounts, setAccounts] = React.useState(null);\n  const [txHash, setTxHash] = React.useState(null);\n  const [contractAddress, setContractAddress] = React.useState(null);\n  const [isSubmit, setIsSubmit] = React.useState(false);\n\n  async function handleGetAccount() {\n    const account = await dapp.request('near', {\n      method: 'dapp:accounts',\n    });\n    setAccounts(account['near']);\n  }\n\n  async function handleSendTransaction() {\n    const rpc = 'https://near-testnet-rpc.allthatnode.com:3030';\n    const provider = new providers.JsonRpcProvider(rpc);\n    const accessKey = await provider.query(`access_key/${accounts.address}/${accounts.pubKey}`, '');\n    const recentBlockHash = utils.serialize.base_decode(accessKey.block_hash);\n\n    const actions = [\n      transactions.functionCall(\n        'increment', // methodName\n        {}, // args\n        new BN('30000000000000'), // 30 TGas\n        new BN(0), // deposit\n      ),\n    ];\n\n    const transaction = transactions.createTransaction(\n      accounts.address, // signerId\n      utils.PublicKey.fromString(accounts.pubKey), //pubKey\n      contractAddress, // contract Id\n      accessKey.nonce + 1, // nonce\n      actions, // actions\n      recentBlockHash, // recentBlockHash\n    );\n\n    const serializedTransaction = Buffer.from(transaction.encode()).toString('base64');\n    const txHash = await dapp.request('near', {\n      method: 'dapp:sendTransaction',\n      params: [serializedTransaction],\n    });\n    setTxHash(txHash);\n  }\n\n  const handleChange = (e) => {\n    setContractAddress(e.target.value);\n  };\n\n  const handleContractId = () => {\n    if (\n      contractAddress.includes('near') ||\n      contractAddress.includes('testnet') ||\n      contractAddress.includes('devnet')\n    ) {\n      setIsSubmit(true);\n    } else {\n      alert('You have to enter valid contract address');\n    }\n  };\n\n  return (\n    <>\n      {accounts ? (\n        <>\n          {isSubmit ? (\n            <Button onClick={handleSendTransaction} type=\"button\">\n              Send a Transaction\n            </Button>\n          ) : (\n            <>\n              <Input\n                value={contractAddress}\n                onChange={handleChange}\n                placeholder=\"Deploayed Contract Address\"\n                style={{ marginRight: '8px' }}\n              />\n              <Button onClick={handleContractId} type=\"button\">\n                Set a Contract Address\n              </Button>\n            </>\n          )}\n          <ResultTooltip style={{ background: '#3B48DF' }}>\n            <b>Accounts:</b> {accounts.address}\n          </ResultTooltip>\n        </>\n      ) : (\n        <>\n          <Button onClick={handleGetAccount} type=\"button\">\n            Get Account\n          </Button>\n          <div>You have to get account first!</div>\n        </>\n      )}\n      {contractAddress && isSubmit && (\n        <ResultTooltip style={{ background: '#F4F4F4', color: 'black' }}>\n          <b>Contract Address:</b> {contractAddress}\n        </ResultTooltip>\n      )}\n      {txHash && (\n        <ResultTooltip style={{ background: '#F08080' }}>\n          <b>Transaction Hash:</b> {txHash}\n        </ResultTooltip>\n      )}\n    </>\n  );\n}\n")),(0,c.kt)("h2",{id:"using-wallet-selector"},"Using Wallet Selector"),(0,c.kt)("p",null,(0,c.kt)("a",{href:"https://github.com/near/wallet-selector",target:"_blank"},"Wallet Selector")," ","is an officially supported project by NEAR that provides abstractions of key features of the wallet for easy communication with dApp users with various wallets that support the NEAR protocol. Users can select the wallet they want and communicate with it using the abstraction method provided by Wallet Selector. ",(0,c.kt)("br",null),"Press the ",(0,c.kt)("code",null,"Log in")," button to connect to the ",(0,c.kt)("b",null,"WELLDONE Wallet"),", then click the ",(0,c.kt)("code",null,"Send a Transaction")," button to run the",(0,c.kt)("code",null,"increment")," method. Press the ",(0,c.kt)("code",null,"Get Count")," button to view the current count value of the contract."),(0,c.kt)(_.Z,{mdxType:"BrowserOnly"},(function(){return(0,c.kt)(T,{mdxType:"WalletSelector"})})),(0,c.kt)("p",null,(0,c.kt)("b",null,"WELLDONE Wallet")," is an officially supported wallet by Wallet Selector. If you are curious about the complete example code for sending transactions using ",(0,c.kt)("b",null,"Wallet Selector"),", please check"," ",(0,c.kt)("a",{href:"https://github.com/welldonestudio/welldonestudio.github.io/tree/feat/tutorial/src/components/WalletSelector",target:"_blank"},"GitHub.")))}H.isMDXComponent=!0},59488:function(){},35883:function(){},98971:function(){},46601:function(){},55024:function(){}}]);