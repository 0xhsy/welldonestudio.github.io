"use strict";(self.webpackChunkwelldone_docs=self.webpackChunkwelldone_docs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Detecting the Provider","href":"/docs/getting-started/detecting-provider","docId":"getting-started/detecting-provider"},{"type":"link","label":"Connecting to Wallet","href":"/docs/getting-started/connecting-to-wallet","docId":"getting-started/connecting-to-wallet"}],"href":"/docs/getting-started"},{"type":"category","label":"Add Chain","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"cosmos","href":"/docs/add-chain/cosmos","docId":"add-chain/cosmos"},{"type":"link","label":"ethereum","href":"/docs/add-chain/ethereum","docId":"add-chain/ethereum"},{"type":"link","label":"solana","href":"/docs/add-chain/solana","docId":"add-chain/solana"}],"href":"/docs/add-chain"},{"type":"category","label":"Provider API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chain Names","href":"/docs/provider-api/chain-names","docId":"provider-api/chain-names"},{"type":"link","label":"Methods","href":"/docs/provider-api/method","docId":"provider-api/method"},{"type":"link","label":"Events","href":"/docs/provider-api/events","docId":"provider-api/events"},{"type":"link","label":"About Universal Provider","href":"/docs/provider-api/how-we-wrap-for-multichain","docId":"provider-api/how-we-wrap-for-multichain"}],"href":"/docs/provider-api"},{"type":"category","label":"Sending Transactions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"celo","href":"/docs/sending-transaction/celo","docId":"sending-transaction/celo"},{"type":"link","label":"cosmos","href":"/docs/sending-transaction/cosmos","docId":"sending-transaction/cosmos"},{"type":"link","label":"ethereum","href":"/docs/sending-transaction/ethereum","docId":"sending-transaction/ethereum"},{"type":"link","label":"klaytn","href":"/docs/sending-transaction/klaytn","docId":"sending-transaction/klaytn"},{"type":"link","label":"near","href":"/docs/sending-transaction/near","docId":"sending-transaction/near"}],"href":"/docs/sending-transaction"},{"type":"category","label":"Deploy and Run","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"introduction","href":"/docs/deploy-and-run/introduction","docId":"deploy-and-run/introduction"},{"type":"link","label":"near","href":"/docs/deploy-and-run/near","docId":"deploy-and-run/near"},{"type":"link","label":"celo","href":"/docs/deploy-and-run/celo","docId":"deploy-and-run/celo"},{"type":"link","label":"Klaytn","href":"/docs/deploy-and-run/klaytn","docId":"deploy-and-run/klaytn"}],"href":"/docs/deploy-and-run"},{"type":"category","label":"Execute the Contract","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ethereum-celo-klaytn","href":"/docs/execute-the-contract/ethereum-celo-klaytn","docId":"execute-the-contract/ethereum-celo-klaytn"},{"type":"link","label":"near","href":"/docs/execute-the-contract/near","docId":"execute-the-contract/near"}],"href":"/docs/Execute-the-Contract"}]},"docs":{"add-chain/cosmos":{"id":"add-chain/cosmos","title":"cosmos","description":"How to add Cosmos-compatible networks to the WELLDONE wallet.","sidebar":"tutorialSidebar"},"add-chain/ethereum":{"id":"add-chain/ethereum","title":"ethereum","description":"How to add EVM-compatible networks to the WELLDONE wallet.","sidebar":"tutorialSidebar"},"add-chain/index":{"id":"add-chain/index","title":"Add Chain","description":"WELLDONE Wallet has the Add Chain function by default, which allows you to effortlessly add networks to your wallet. To use the tool, go to the WELLDONE Wallet Add Chain Website or use the window.dapp method.","sidebar":"tutorialSidebar"},"add-chain/solana":{"id":"add-chain/solana","title":"solana","description":"How to add Solana-compatible networks to the WELLDONE wallet.","sidebar":"tutorialSidebar"},"deploy-and-run/celo":{"id":"deploy-and-run/celo","title":"celo","description":"Deploy and Run Celo Smart Contract","sidebar":"tutorialSidebar"},"deploy-and-run/index":{"id":"deploy-and-run/index","title":"Deploy and Run","description":"If you create contracts using WELLDONE Wallet and Remix IDE, you may quickly deploy and execute them using the WELLDONE Studio Remix IDE Plugin. Through the tutorial, WELLDONE Wallet gives you fundamental setup procedures as well as deploying a contract and triggering the methods on it.","sidebar":"tutorialSidebar"},"deploy-and-run/introduction":{"id":"deploy-and-run/introduction","title":"introduction","description":"Deploy and run smart contracts in multi-chain environments with WELLDONE Code","sidebar":"tutorialSidebar"},"deploy-and-run/klaytn":{"id":"deploy-and-run/klaytn","title":"Klaytn","description":"Deploy and Run Klaytn Smart Contract","sidebar":"tutorialSidebar"},"deploy-and-run/near":{"id":"deploy-and-run/near","title":"near","description":"Deploy and Run Near Smart Contract","sidebar":"tutorialSidebar"},"execute-the-contract/ethereum-celo-klaytn":{"id":"execute-the-contract/ethereum-celo-klaytn","title":"ethereum-celo-klaytn","description":"How to execute contract from EVM with WELLDONE Wallet.","sidebar":"tutorialSidebar"},"execute-the-contract/index":{"id":"execute-the-contract/index","title":"Execute the Contract","description":"This article would like to provide a brief Counter example to demonstrate how to use a dapp:sendTransaction method to send transactions to smart contracts distributed by networks.","sidebar":"tutorialSidebar"},"execute-the-contract/near":{"id":"execute-the-contract/near","title":"near","description":"How to execute transactions from NEAR with WELLDONE Wallet.","sidebar":"tutorialSidebar"},"getting-started/connecting-to-wallet":{"id":"getting-started/connecting-to-wallet","title":"Connecting to Wallet","description":"How to connect to WELLDONE Wallet","sidebar":"tutorialSidebar"},"getting-started/detecting-provider":{"id":"getting-started/detecting-provider","title":"Detecting the Provider","description":"How to detect WELLDONE Wallet","sidebar":"tutorialSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Getting Started","description":"Install the WELLDONE Wallet in the browser of your choice on your machine to begin developing using WELLDONE\'s services. It is available for download here.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Welcome to the WELLDONE Studio developer documentation.","sidebar":"tutorialSidebar"},"provider-api/chain-names":{"id":"provider-api/chain-names","title":"Chain Names","description":"- The chain name that we support is as follows. These names are included in our provider method\'s chain argument to allow access to the multi-networks using the same interface.","sidebar":"tutorialSidebar"},"provider-api/events":{"id":"provider-api/events","title":"Events","description":"dapp provider emits two events through the EventEmitter API on Node.js.","sidebar":"tutorialSidebar"},"provider-api/how-we-wrap-for-multichain":{"id":"provider-api/how-we-wrap-for-multichain","title":"About Universal Provider","description":"How does Universal Provider wrap for multi-chain developers?","sidebar":"tutorialSidebar"},"provider-api/index":{"id":"provider-api/index","title":"Provider API","description":"We recommend you go through the basics before reading the material.","sidebar":"tutorialSidebar"},"provider-api/method":{"id":"provider-api/method","title":"Methods","description":"dapp provider has the following methods.","sidebar":"tutorialSidebar"},"sending-transaction/celo":{"id":"sending-transaction/celo","title":"celo","description":"Celo developers make use of external libraries like DappKit. The following is an explanation of how to initiate a transfer transaction by invoking the eth sendTransaction method through dapp.request. We recommend utilizing a dedicated library rather than accessing the service directly if you want a greater degree of abstraction than the API provides.","sidebar":"tutorialSidebar"},"sending-transaction/cosmos":{"id":"sending-transaction/cosmos","title":"cosmos","description":"Cosmos developers make use of external libraries like CosmJS. The following is an explanation of how to initiate a transfer transaction by invoking the method through dapp.request. We recommend utilizing a dedicated library rather than accessing the service directly if you want a greater degree of abstraction than the API provides.","sidebar":"tutorialSidebar"},"sending-transaction/ethereum":{"id":"sending-transaction/ethereum","title":"ethereum","description":"Ethereum developers make use of external libraries like ethers. The following is an explanation of how to initiate a transfer transaction by invoking the eth_sendTransaction method through dapp.request. We recommend utilizing a dedicated library rather than accessing the service directly if you want a greater degree of abstraction than the API provides.","sidebar":"tutorialSidebar"},"sending-transaction/index":{"id":"sending-transaction/index","title":"Sending Transactions","description":"The undeniable but fundamental activity in the web3 universe is Send Transactions. This action can invoke simple token transfers, the creation of new smart contracts, or change the status of the blockchain in a variety of ways. When the dApp is linked to the WELLDONE Wallet, you may use the dapp:sendTransaction function to send a transaction request.","sidebar":"tutorialSidebar"},"sending-transaction/klaytn":{"id":"sending-transaction/klaytn","title":"klaytn","description":"Klaytn developers make use of external libraries like caver.js. The following is an explanation of how to initiate a transfer transaction by invoking the eth_sendTransaction method through dapp.request. We recommend utilizing a dedicated library rather than accessing the service directly if you want a greater degree of abstraction than the API provides.","sidebar":"tutorialSidebar"},"sending-transaction/near":{"id":"sending-transaction/near","title":"near","description":"The following is an explanation of how to initiate a transfer transaction in NEAR network by invoking the through dapp.request. We recommend utilizing a dedicated library rather than accessing the service directly if you want a greater degree of abstraction than the official API provides.","sidebar":"tutorialSidebar"}}}')}}]);