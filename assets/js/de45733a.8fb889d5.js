"use strict";(self.webpackChunkwelldone_docs=self.webpackChunkwelldone_docs||[]).push([[1627],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},88607:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),c=["components"],i={description:"How to execute contract from EVM with WELLDONE Wallet.",keywords:["Execute Contract","Ethereum","Celo","Klaytn","Smart Contract"]},l="Ethereum, Celo, Klaytn",s={unversionedId:"wallet/developer-guide/execute-the-contract/ethereum-celo-klaytn",id:"wallet/developer-guide/execute-the-contract/ethereum-celo-klaytn",title:"Ethereum, Celo, Klaytn",description:"How to execute contract from EVM with WELLDONE Wallet.",source:"@site/docs/wallet/developer-guide/execute-the-contract/ethereum-celo-klaytn.md",sourceDirName:"wallet/developer-guide/execute-the-contract",slug:"/wallet/developer-guide/execute-the-contract/ethereum-celo-klaytn",permalink:"/wallet/developer-guide/execute-the-contract/ethereum-celo-klaytn",draft:!1,editUrl:"https://github.com/welldonestudio/welldonestudio.github.io/tree/master/docs/wallet/developer-guide/execute-the-contract/ethereum-celo-klaytn.md",tags:[],version:"current",frontMatter:{description:"How to execute contract from EVM with WELLDONE Wallet.",keywords:["Execute Contract","Ethereum","Celo","Klaytn","Smart Contract"]},sidebar:"tutorialSidebar",previous:{title:"Execute the Contract",permalink:"/execute-the-contract"},next:{title:"NEAR",permalink:"/wallet/developer-guide/execute-the-contract/near"}},u={},p=[{value:"Ethers",id:"ethers",level:2},{value:"Params",id:"params",level:3},{value:"web3.js",id:"web3js",level:2},{value:"Params",id:"params-1",level:3}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ethereum-celo-klaytn"},"Ethereum, Celo, Klaytn"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The EVM-compatible networks, such as Ethereum, Celo, and Klaytn, extract ABI (Application Binary Interface) when the contract is deployed, implying that using a dedicated library such as ",(0,o.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/"},"ethers.js")," and ",(0,o.kt)("a",{parentName:"p",href:"https://web3js.readthedocs.io/en/v1.2.11/getting-started.html"},"web3.js"))),(0,o.kt)("h2",{id:"ethers"},"Ethers"),(0,o.kt)("h3",{id:"params"},"Params"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"new ethers.Contract( address , abi , providerOrSigner )")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"address - String: A contract address to be requested"),(0,o.kt)("li",{parentName:"ul"},"abi - Object: JSON interface for contracts"),(0,o.kt)("li",{parentName:"ul"},"providerOrSigner : A provider or signer that is instantiated by constructor")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// Read-Only; By connecting to a Provider, allows:\n// - Any constant function\n// - Querying Filters\n// - Populating Unsigned Transactions for non-constant methods\n// - Estimating Gas for non-constant (as an anonymous sender)\n// - Static Calling non-constant methods (as anonymous sender)\nconst myContract = new ethers.Contract(address, abi, provider);\n\n// Read-Write; By connecting to a Signer, allows:\n// - Everything from Read-Only (except as Signer, not anonymous)\n// - Sending transactions for non-constant functions\nconst myContract_rw = new ethers.Contract(address, abi, signer);\n")),(0,o.kt)("h2",{id:"web3js"},"web3.js"),(0,o.kt)("h3",{id:"params-1"},"Params"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"new web3.eth.Contract(jsonInterface[, address][, options])")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"jsonInterface - Object: JSON interface for contracts"),(0,o.kt)("li",{parentName:"ul"},"address - String (optional): A contract address to be requested"),(0,o.kt)("li",{parentName:"ul"},"options - Object (optional): The options for a contract",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"from - String: The address that sends a transaction"),(0,o.kt)("li",{parentName:"ul"},"gasPrice - String: Gas price to be payed in a transaction"),(0,o.kt)("li",{parentName:"ul"},"gas - Number: gas limit"),(0,o.kt)("li",{parentName:"ul"},"data - String: Contract Bytecode")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const myContract = new web3.eth.Contract([...], '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe', {\n    from: '0x1234567890123456789012345678901234567891', // default from address\n    gasPrice: '20000000000' // default gas price in wei, 20 gwei in this case\n});\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Visit the official docs for further information."),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://web3js.readthedocs.io/en/v1.7.5/web3-eth-contract.html"},"web3.js - web3-eth-contract")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.ethers.io/v5/api/contract/example/#example-erc-20-contract--connecting-to-a-contract"},"ethers - contact connection to a contract")))))}m.isMDXComponent=!0}}]);