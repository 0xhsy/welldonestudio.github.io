"use strict";(self.webpackChunkwelldone_docs=self.webpackChunkwelldone_docs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Detecting the Provider","href":"/docs/getting-started/detecting-provider","docId":"getting-started/detecting-provider"},{"type":"link","label":"Connecting to Wallet","href":"/docs/getting-started/connecting-to-wallet","docId":"getting-started/connecting-to-wallet"}],"href":"/docs/getting-started"},{"type":"category","label":"Add Chain","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cosmos","href":"/docs/add-chain/Cosmos","docId":"add-chain/Cosmos"},{"type":"link","label":"Ethereum","href":"/docs/add-chain/Ethereum","docId":"add-chain/Ethereum"},{"type":"link","label":"Solana","href":"/docs/add-chain/Solana","docId":"add-chain/Solana"}],"href":"/docs/add-chain"},{"type":"category","label":"Provider API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chain Names","href":"/docs/provider-api/chain-names","docId":"provider-api/chain-names"},{"type":"link","label":"Methods","href":"/docs/provider-api/method","docId":"provider-api/method"},{"type":"link","label":"Events","href":"/docs/provider-api/events","docId":"provider-api/events"},{"type":"link","label":"About Universal Provider","href":"/docs/provider-api/how-we-wrap-for-multichain","docId":"provider-api/how-we-wrap-for-multichain"}],"href":"/docs/provider-api"},{"type":"category","label":"Sending Transactions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Celo","href":"/docs/Sending Transactions/Celo","docId":"Sending Transactions/Celo"},{"type":"link","label":"Cosmos","href":"/docs/Sending Transactions/Cosmos","docId":"Sending Transactions/Cosmos"},{"type":"link","label":"Ethereum","href":"/docs/Sending Transactions/Ethereum","docId":"Sending Transactions/Ethereum"},{"type":"link","label":"Klaytn","href":"/docs/Sending Transactions/Klaytn","docId":"Sending Transactions/Klaytn"},{"type":"link","label":"Near","href":"/docs/Sending Transactions/Near","docId":"Sending Transactions/Near"}],"href":"/docs/Sending Transactions"},{"type":"category","label":"Deploy and Run","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/Deploy-and-Run/Introduction","docId":"Deploy-and-Run/Introduction"},{"type":"link","label":"Near","href":"/docs/Deploy-and-Run/Near","docId":"Deploy-and-Run/Near"},{"type":"link","label":"Celo","href":"/docs/Deploy-and-Run/Celo","docId":"Deploy-and-Run/Celo"},{"type":"link","label":"Klaytn","href":"/docs/Deploy-and-Run/Klaytn","docId":"Deploy-and-Run/Klaytn"}],"href":"/docs/Deploy-and-Run"},{"type":"category","label":"Execute the Contract","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Ethereum, Celo, Klaytn","href":"/docs/execute-the-contract/Ethereum, Celo, Klaytn","docId":"execute-the-contract/Ethereum, Celo, Klaytn"},{"type":"link","label":"NEAR","href":"/docs/execute-the-contract/NEAR","docId":"execute-the-contract/NEAR"}],"href":"/docs/Execute-the-Contract"}]},"docs":{"add-chain/Cosmos":{"id":"add-chain/Cosmos","title":"Cosmos","description":"Cosmos params","sidebar":"tutorialSidebar"},"add-chain/Ethereum":{"id":"add-chain/Ethereum","title":"Ethereum","description":"Ethereum params","sidebar":"tutorialSidebar"},"add-chain/index":{"id":"add-chain/index","title":"Add Chain","description":"WELLDONE Wallet has the Add Chain function by default, which allows you to effortlessly add networks to your wallet. To use the tool, go to the WELLDONE Wallet Add Chain Website or use the window.dapp method.","sidebar":"tutorialSidebar"},"add-chain/Solana":{"id":"add-chain/Solana","title":"Solana","description":"Solana params","sidebar":"tutorialSidebar"},"Deploy-and-Run/Celo":{"id":"Deploy-and-Run/Celo","title":"Celo","description":"Deploy and Run Celo Smart Contract","sidebar":"tutorialSidebar"},"Deploy-and-Run/index":{"id":"Deploy-and-Run/index","title":"Deploy and Run","description":"If you create contracts using WELLDONE Wallet and Remix IDE, you may quickly deploy and execute them using the WELLDONE Studio Remix IDE Plugin. Through the tutorial, WELLDONE Wallet gives you fundamental setup procedures as well as deploying a contract and triggering the methods on it.","sidebar":"tutorialSidebar"},"Deploy-and-Run/Introduction":{"id":"Deploy-and-Run/Introduction","title":"Introduction","description":"Since the smart contract development environment differs from networks, developers must reconstruct the development environment whenever the targeted network changes.","sidebar":"tutorialSidebar"},"Deploy-and-Run/Klaytn":{"id":"Deploy-and-Run/Klaytn","title":"Klaytn","description":"Deploy and Run Klaytn Smart Contract","sidebar":"tutorialSidebar"},"Deploy-and-Run/Near":{"id":"Deploy-and-Run/Near","title":"Near","description":"Deploy and Run Near Smart Contract","sidebar":"tutorialSidebar"},"execute-the-contract/Ethereum, Celo, Klaytn":{"id":"execute-the-contract/Ethereum, Celo, Klaytn","title":"Ethereum, Celo, Klaytn","description":"The EVM-compatible networks, such as Ethereum, Celo, and Klaytn, extract ABI (Application Binary Interface) when the contract is deployed, implying that using a dedicated library such as ethers.js and web3.js","sidebar":"tutorialSidebar"},"execute-the-contract/index":{"id":"execute-the-contract/index","title":"Execute the Contract","description":"This article would like to provide a brief Counter example to demonstrate how to use a dapp:sendTransaction method to send transactions to smart contracts distributed by networks.","sidebar":"tutorialSidebar"},"execute-the-contract/NEAR":{"id":"execute-the-contract/NEAR","title":"NEAR","description":"Params","sidebar":"tutorialSidebar"},"getting-started/connecting-to-wallet":{"id":"getting-started/connecting-to-wallet","title":"Connecting to Wallet","description":"How to connect to WELLDONE Wallet","sidebar":"tutorialSidebar"},"getting-started/detecting-provider":{"id":"getting-started/detecting-provider","title":"Detecting the Provider","description":"How to detect WELLDONE Wallet","sidebar":"tutorialSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Getting Started","description":"Install the WELLDONE Wallet in the browser of your choice on your machine to begin developing using WELLDONE\'s services. It is available for download here.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Welcome to the WELLDONE Studio developer documentation. WELLDONE Studio creates the tools that web3 developers require the most. Integrating disparate web3 development experiences to assist builders in developing more naturally and simply. We are always thinking about ways to make Web3 more familiar for builders. We exist to help you realize your full potential and aim your efforts in the appropriate direction. These considerations have resulted in the following tools in WELLDONE Studio.","sidebar":"tutorialSidebar"},"provider-api/chain-names":{"id":"provider-api/chain-names","title":"Chain Names","description":"* The chain name that we support is as follows. These names are supplied in our provider method\'s chain argument to allow access to the multi-networks using the same interface.","sidebar":"tutorialSidebar"},"provider-api/events":{"id":"provider-api/events","title":"Events","description":"dapp provider emits two events through the EventEmitter API on Node.js.","sidebar":"tutorialSidebar"},"provider-api/how-we-wrap-for-multichain":{"id":"provider-api/how-we-wrap-for-multichain","title":"About Universal Provider","description":"How does Universal Provider wrap for multi-chain developers?","sidebar":"tutorialSidebar"},"provider-api/index":{"id":"provider-api/index","title":"Provider API","description":"We recommend you to go through the basics before reading the material.","sidebar":"tutorialSidebar"},"provider-api/method":{"id":"provider-api/method","title":"Methods","description":"dapp provider has the following methods.","sidebar":"tutorialSidebar"},"Sending Transactions/Celo":{"id":"Sending Transactions/Celo","title":"Celo","description":"Celo developers make use of external libraries like web3.js. The following is an explanation of how to initiate a transfer transaction by invoking the eth sendTransaction method through dapp.request. We recommend utilizing a dedicated library rather accessing the service directly if you want a greater degree of abstraction than the API provides.","sidebar":"tutorialSidebar"},"Sending Transactions/Cosmos":{"id":"Sending Transactions/Cosmos","title":"Cosmos","description":"Cosmos developers make use of external libraries like CosmJS. The following is an explanation of how to initiate a transfer transaction by invoking the method through dapp.request. We recommend utilizing a dedicated library rather accessing the service directly if you want a greater degree of abstraction than the API provides.","sidebar":"tutorialSidebar"},"Sending Transactions/Ethereum":{"id":"Sending Transactions/Ethereum","title":"Ethereum","description":"Ethereum developers make use of external libraries like ethers. The following is an explanation of how to initiate a transfer transaction by invoking the eth_sendTransaction method through dapp.request. We recommend utilizing a dedicated library rather accessing the service directly if you want a greater degree of abstraction than the API provides.","sidebar":"tutorialSidebar"},"Sending Transactions/index":{"id":"Sending Transactions/index","title":"Sending Transactions","description":"The undeniable but fundamental activity in the web3 universe is Send Transactions. This action can invoke simple token transfers, the creation of new smart contracts, or changing the status of the blockchain in a variety of ways. When the dApp is linked to the WELLDONE Wallet, you may use the dapp:sendTransaction function to send a transaction request.","sidebar":"tutorialSidebar"},"Sending Transactions/Klaytn":{"id":"Sending Transactions/Klaytn","title":"Klaytn","description":"Klaytn developers make use of external libraries like ethers. The following is an explanation of how to initiate a transfer transaction by invoking the eth_sendTransaction method through dapp.request. We recommend utilizing a dedicated library rather accessing the service directly if you want a greater degree of abstraction than the API provides.","sidebar":"tutorialSidebar"},"Sending Transactions/Near":{"id":"Sending Transactions/Near","title":"Near","description":"The following is an explanation of how to initiate a transfer transaction in NEAR network by invoking the through dapp.request. We recommend utilizing a dedicated library rather accessing the service directly if you want a greater degree of abstraction than the official API provides.","sidebar":"tutorialSidebar"}}}')}}]);