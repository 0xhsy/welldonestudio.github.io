"use strict";(self.webpackChunkwelldone_docs=self.webpackChunkwelldone_docs||[]).push([[734],{3905:function(n,t,e){e.d(t,{Zo:function(){return p},kt:function(){return m}});var a=e(67294);function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function o(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function s(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?o(Object(e),!0).forEach((function(t){r(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function i(n,t){if(null==n)return{};var e,a,r=function(n,t){if(null==n)return{};var e,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)e=o[a],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)e=o[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var c=a.createContext({}),l=function(n){var t=a.useContext(c),e=t;return n&&(e="function"==typeof n?n(t):s(s({},t),n)),e},p=function(n){var t=l(n.components);return a.createElement(c.Provider,{value:t},n.children)},u={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(n,t){var e=n.components,r=n.mdxType,o=n.originalType,c=n.parentName,p=i(n,["components","mdxType","originalType","parentName"]),d=l(e),m=r,T=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return e?a.createElement(T,s(s({ref:t},p),{},{components:e})):a.createElement(T,s({ref:t},p))}));function m(n,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var o=e.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=n,i.mdxType="string"==typeof n?n:r,s[1]=i;for(var l=2;l<o;l++)s[l]=e[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,e)}d.displayName="MDXCreateElement"},9240:function(n,t,e){e.r(t),e.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var a=e(83117),r=e(80102),o=(e(67294),e(3905)),s=["components"],i={keywords:["Aptos sendTransaction","dapp:signAndSendTransaction","Aptos","\uc571\ud1a0\uc2a4","\uc571\ud1a0\uc2a4 \ud2b8\ub79c\uc7ad\uc158 \uc804\uc1a1"],description:"Sending Transactions in Aptos, Aptos\uc5d0\uc11c \ud2b8\ub79c\uc7ad\uc158 \ubcf4\ub0b4\uae30"},c="Aptos",l={unversionedId:"wallet/developer-guide/sending-transaction/aptos",id:"wallet/developer-guide/sending-transaction/aptos",title:"Aptos",description:"Sending Transactions in Aptos, Aptos\uc5d0\uc11c \ud2b8\ub79c\uc7ad\uc158 \ubcf4\ub0b4\uae30",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/wallet/developer-guide/sending-transaction/aptos.md",sourceDirName:"wallet/developer-guide/sending-transaction",slug:"/wallet/developer-guide/sending-transaction/aptos",permalink:"/ko/wallet/developer-guide/sending-transaction/aptos",draft:!1,editUrl:"https://github.com/welldonestudio/welldonestudio.github.io/tree/master/docs/wallet/developer-guide/sending-transaction/aptos.md",tags:[],version:"current",frontMatter:{keywords:["Aptos sendTransaction","dapp:signAndSendTransaction","Aptos","\uc571\ud1a0\uc2a4","\uc571\ud1a0\uc2a4 \ud2b8\ub79c\uc7ad\uc158 \uc804\uc1a1"],description:"Sending Transactions in Aptos, Aptos\uc5d0\uc11c \ud2b8\ub79c\uc7ad\uc158 \ubcf4\ub0b4\uae30"},sidebar:"tutorialSidebar",previous:{title:"Sending Transactions",permalink:"/ko/sending-transaction"},next:{title:"Celo",permalink:"/ko/wallet/developer-guide/sending-transaction/celo"}},p={},u=[{value:"1. Returns",id:"1-returns",level:2},{value:"2. Params",id:"2-params",level:2},{value:"3. Example",id:"3-example",level:2}],d={toc:u};function m(n){var t=n.components,e=(0,r.Z)(n,s);return(0,o.kt)("wrapper",(0,a.Z)({},d,e,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"aptos"},"Aptos"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"\uc774 \ud30c\ud2b8\uc5d0\uc11c\ub294 Aptos \ud2b8\ub79c\uc7ad\uc158 \uc804\uc1a1\uc744 ",(0,o.kt)("inlineCode",{parentName:"p"},"dapp.request"),"\ub97c \ud1b5\ud574 \uc2dc\uc791\ud558\ub294 \ubc29\uc2dd\uc744 \uc18c\uac1c\ud569\ub2c8\ub2e4. \uc774 API\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ub192\uc740 \uc218\uc900\uc758 \ucd94\uc0c1\ud654\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uacf5\uae09\uc790\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0, \ud3b8\uc758 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. WELLDONE Wallet\uc740 dapp \uba54\uc18c\ub4dc\uc758 \ud3b8\ub9ac\ud55c \uc0ac\uc6a9\uc744 \uc704\ud55c \ubc29\ubc95\uc744 \uac15\uad6c \uc911\uc785\ub2c8\ub2e4.")),(0,o.kt)("p",null,"Aptos \ub124\ud2b8\uc6cc\ud06c\uc5d0 \ud2b8\ub79c\uc7ad\uc158\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc11c\ub294 \ub2e4\uc74c\uc758 \uacfc\uc815\uc774 \uba3c\uc800 \ud544\uc694\ud569\ub2c8\ub2e4."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Universal Provider (",(0,o.kt)("inlineCode",{parentName:"li"},"window.dapp"),") \uac10\uc9c0"),(0,o.kt)("li",{parentName:"ol"},"\uc0ac\uc6a9\uc790\uac00 \uc5f0\uacb0\ub41c Aptos \ub124\ud2b8\uc6cc\ud06c \uac10\uc9c0"),(0,o.kt)("li",{parentName:"ol"},"\uc0ac\uc6a9\uc790\uc758 Aptos \uacc4\uc815 \uac00\uc838\uc624\uae30")),(0,o.kt)("p",null,"WELLDONE Wallet\uc5d0\uc11c\ub294 \ud574\ub2f9 \uc9c0\uac11 \uc8fc\uc18c\uc5d0 \uc5f0\uacb0\ub41c \ub124\ud2b8\uc6cc\ud06c\ub97c \uc790\ub3d9\uc73c\ub85c \uac10\uc9c0\ud558\uc5ec \uac00\uc838\uc635\ub2c8\ub2e4. \ub530\ub77c\uc11c \ud2b8\ub79c\uc7ad\uc158\uc744 \ubcf4\ub0b4\uae30 \uc774\uc804\uc5d0 \uba54\uc778\ub137\uc5d0 \ud2b8\ub79c\uc7ad\uc158\uc744 \ubcf4\ub0bc \uac83\uc778\uc9c0, \ud14c\uc2a4\ud2b8\ub137\uc5d0 \ud2b8\ub79c\uc7ad\uc158\uc744 \ubcf4\ub0bc \uac83\uc778\uc9c0 \ubbf8\ub9ac \uace0\ub824\ud574\ub450\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud2b8\ub79c\uc7ad\uc158\uc740 \uc544\ub798\uc640 \uac19\uc740 \ud3ec\ub9f7\uc744 \ud1b5\ud574 \uc804\uc1a1\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const response = await dapp.request('aptos', {\n  method: 'dapp:signAndSendTransaction',\n  params: [HEX_STRING_TX_DATA],\n});\n")),(0,o.kt)("h2",{id:"1-returns"},"1. Returns"),(0,o.kt)("p",null,"\ud574\ub2f9 \uba54\uc18c\ub4dc\ub294 \ub2e8\uc77c \ud2b8\ub79c\uc7ad\uc158 \ubfd0\ub9cc \uc544\ub2c8\ub77c \uc5ec\ub7ec \uac1c\uc758 \ud2b8\ub79c\uc7ad\uc158 \uc804\uc1a1\uc774 \uac00\ub2a5\ud558\uae30 \ub54c\ubb38\uc5d0, \ud2b8\ub79c\uc7ad\uc158 \ud574\uc2dc \uac12\uc744 string \ud0c0\uc785\uc758 ",(0,o.kt)("inlineCode",{parentName:"p"},"Promise")," \ubc30\uc5f4\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"Promise<string[]>;\n")),(0,o.kt)("h2",{id:"2-params"},"2. Params"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type HEX_STRING_TX_DATA = string;\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Aptos\uc5d0\uc11c \ud2b8\ub79c\uc7ad\uc158\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc120 ",(0,o.kt)("inlineCode",{parentName:"li"},"HEX_STRING_TX_DATA"),"\uc744 params\ub85c \ub118\uaca8\uc57c \ud569\ub2c8\ub2e4. \ud574\ub2f9 \uac12\uc740 ",(0,o.kt)("inlineCode",{parentName:"li"},"aptos")," \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ud1b5\ud574 \uc5bb\uc744 \uc218 \uc788\uc73c\uba70, \uc790\uc138\ud55c \uc0ac\uc6a9 \ubc29\uc2dd\uc740 ",(0,o.kt)("a",{parentName:"li",href:"https://aptos-labs.github.io/ts-sdk-doc/modules.html"},"\uacf5\uc2dd \ubb38\uc11c"),"\uc640 \uc544\ub798\uc758 \uc608\uc2dc\ub97c \ud1b5\ud574 \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.")),(0,o.kt)("h2",{id:"3-example"},"3. Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { AptosClient, TxnBuilderTypes, BCS } from 'aptos';\nconst getSerializedTransaction = async (accounts) => {\n  try {\n    const aptosClient = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\n    // make transaction\n    const payload = {\n      type: 'entry_function_payload',\n      function: '0x1::coin::transfer',\n      type_arguments: ['0x1::aptos_coin::AptosCoin'],\n      arguments: [accounts.address, 1], // 1 is in Octas\n    };\n\n    const token = new TxnBuilderTypes.TypeTagStruct(\n      TxnBuilderTypes.StructTag.fromString('0x1::aptos_coin::AptosCoin'),\n    );\n\n    const entryFunctionPayload = new TxnBuilderTypes.TransactionPayloadEntryFunction(\n      TxnBuilderTypes.EntryFunction.natural(\n        '0x1::coin',\n        'transfer',\n        [token],\n        [\n          BCS.bcsToBytes(TxnBuilderTypes.AccountAddress.fromHex(accounts.address)),\n          BCS.bcsSerializeUint64(100),\n        ],\n      ),\n    );\n\n    const rawTx = await aptosClient.generateRawTransaction(\n      accounts.address,\n      entryFunctionPayload,\n    );\n\n    const rawTxnWithSalt = `0x${Buffer.concat([\n      Buffer.from(sha3_256(Buffer.from('APTOS::RawTransaction', 'ascii')), 'hex'),\n      Buffer.from(BCS.bcsToBytes(rawTx)),\n    ]).toString('hex')}`;\n\n    return rawTxnWithSalt;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nconst sendTransaction = async () => {\n  // get accounts first\n  const accounts = await dapp.request('aptos', { method: 'dapp:accounts' });\n  const HEX_STRING_TX_DATA = await getSerializedTransaction(accounts['aptos']);\n  // sending a transaction\n    try{\n      const response = await dapp.request('aptos' ,{\n        method: 'dapp:signAndSendTransaction',\n        params: [\n          // use serialized transaction\n          [`${HEX_STRING_TX_DATA}`]\n        ]\n      });\n      const txHash = response[0];\n    } catch (error) {\n      /*\n        {\n          message: 'User denied transaction signature',\n          code: 4001,\n        }\n      */\n    }\n  }\n")),(0,o.kt)("p",null,"\uc544\ub798\uc758 \uc608\uc81c\ub97c \ud1b5\ud574 \uc2e4\uc81c\ub85c \ud2b8\ub79c\uc7ad\uc158\uc744 \uc804\uc1a1\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\uc81c\ub97c \ud1b5\ud574 \ud2b8\ub79c\uc7ad\uc158\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc120 Aptos \uacc4\uc815\uacfc devnet \ud1a0\ud070\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc9c0\uac11 \ub0b4\uc758 FAUCET \ud0ed\uc5d0\uc11c faucet\uc744 \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function sendTransaction() {\n  const CHAIN_NAME = 'aptos';\n  const [accounts, setAccounts] = React.useState(null);\n  const [txHash, setTxHash] = React.useState(null);\n  const getSerializedTransaction = async () => {\n    try {\n      const aptosClient = new AptosClient('https://fullnode.devnet.aptoslabs.com/v1');\n      // make transaction\n      const payload = {\n        type: 'entry_function_payload',\n        function: '0x1::coin::transfer',\n        type_arguments: ['0x1::aptos_coin::AptosCoin'],\n        arguments: [accounts.address, 1], // 1 is in Octas\n      };\n\n      const token = new TxnBuilderTypes.TypeTagStruct(\n        TxnBuilderTypes.StructTag.fromString('0x1::aptos_coin::AptosCoin'),\n      );\n\n      const entryFunctionPayload = new TxnBuilderTypes.TransactionPayloadEntryFunction(\n        TxnBuilderTypes.EntryFunction.natural(\n          '0x1::coin',\n          'transfer',\n          [token],\n          [\n            BCS.bcsToBytes(TxnBuilderTypes.AccountAddress.fromHex(accounts.address)),\n            BCS.bcsSerializeUint64(100),\n          ],\n        ),\n      );\n\n      const rawTx = await aptosClient.generateRawTransaction(\n        accounts.address,\n        entryFunctionPayload,\n      );\n\n      const rawTxnWithSalt = `0x${Buffer.concat([\n        Buffer.from(sha3_256(Buffer.from('APTOS::RawTransaction', 'ascii')), 'hex'),\n        Buffer.from(BCS.bcsToBytes(rawTx)),\n      ]).toString('hex')}`;\n\n      return rawTxnWithSalt;\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  async function handleGetAccount() {\n    try {\n      const accounts = await dapp.request(CHAIN_NAME, {\n        method: 'dapp:accounts',\n      });\n      const status = await window.dapp.request('aptos', {\n        method: 'GET',\n        params: [\n          {\n            url: '/',\n          },\n        ],\n      });\n      if (status.chain_id === 1 | status.chain_id === 2) {\n        throw new Error('Please chagne to APTOS devnet in WELLDONE Wallet');\n      }\n      setAccounts(accounts[CHAIN_NAME]);\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n\n  async function handleSendTransaction() {\n    try {\n      const HEX_STRING_TX_DATA = await getSerializedTransaction();\n      const response = await dapp.request(CHAIN_NAME, {\n        method: 'dapp:signAndSendTransaction',\n        params: [`${HEX_STRING_TX_DATA}`],\n      });\n      const txHash = response[0];\n\n      setTxHash(txHash);\n    } catch (error) {\n      console.log(error);\n      alert(`Error Message: ${error.message}\\nError Code: ${error.code}`);\n    }\n  }\n\n  return (\n    <>\n      {accounts ? (\n        <>\n          <Button onClick={handleSendTransaction} type=\"button\">\n            Send a Transaction\n          </Button>\n          <ResultTooltip style={{ background: '#3B48DF' }}>\n            <b>Accounts:</b> {accounts.address}\n          </ResultTooltip>\n        </>\n      ) : (\n        <>\n          <Button onClick={handleGetAccount} type=\"button\">\n            Get Account\n          </Button>\n          <div>You have to get account first!</div>\n        </>\n      )}\n      {txHash && (\n        <ResultTooltip style={{ background: '#F08080' }}>\n          <b>Transaction Hash:</b> {txHash}\n        </ResultTooltip>\n      )}\n    </>\n  );\n}\n")))}m.isMDXComponent=!0}}]);