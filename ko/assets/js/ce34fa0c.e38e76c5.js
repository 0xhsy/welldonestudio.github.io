"use strict";(self.webpackChunkwelldone_docs=self.webpackChunkwelldone_docs||[]).push([[5410],{3905:function(n,e,t){t.d(e,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var c=r.createContext({}),s=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},d=function(n){var e=s(n.components);return r.createElement(c.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,c=n.parentName,d=l(n,["components","mdxType","originalType","parentName"]),u=s(t),m=a,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||o;return t?r.createElement(f,i(i({ref:e},d),{},{components:t})):r.createElement(f,i({ref:e},d))}));function m(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=n,l.mdxType="string"==typeof n?n:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4270:function(n,e,t){t.r(e),t.d(e,{assets:function(){return d},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=t(3117),a=t(102),o=(t(7294),t(3905)),i=["components"],l={description:"\uc194\ub77c\ub098 \uae30\ubc18 \ub124\ud2b8\uc6cc\ud06c \ucd94\uac00",keywords:["\ub124\ud2b8\uc6cc\ud06c \ucd94\uac00","\uc194\ub77c\ub098"]},c="Solana",s={unversionedId:"add-chain/developer-guide/solana",id:"add-chain/developer-guide/solana",title:"Solana",description:"\uc194\ub77c\ub098 \uae30\ubc18 \ub124\ud2b8\uc6cc\ud06c \ucd94\uac00",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/add-chain/developer-guide/solana.md",sourceDirName:"add-chain/developer-guide",slug:"/add-chain/developer-guide/solana",permalink:"/ko/add-chain/developer-guide/solana",draft:!1,editUrl:"https://github.com/welldonestudio/welldonestudio.github.io/tree/master/docs/add-chain/developer-guide/solana.md",tags:[],version:"current",frontMatter:{description:"\uc194\ub77c\ub098 \uae30\ubc18 \ub124\ud2b8\uc6cc\ud06c \ucd94\uac00",keywords:["\ub124\ud2b8\uc6cc\ud06c \ucd94\uac00","\uc194\ub77c\ub098"]},sidebar:"tutorialSidebar",previous:{title:"Ethereum",permalink:"/ko/add-chain/developer-guide/ethereum"},next:{title:"Code",permalink:"/ko/code"}},d={},p=[{value:"Solana params",id:"solana-params",level:2},{value:"Example",id:"example",level:2}],u={toc:p};function m(n){var e=n.components,t=(0,a.Z)(n,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"solana"},"Solana"),(0,o.kt)("h2",{id:"solana-params"},"Solana params"),(0,o.kt)("p",null,"Solana \uae30\ubc18\uc758 \ub124\ud2b8\uc6cc\ud06c, \ud639\uc740 \uadf8 \uc678\uc758 \ub124\ud2b8\uc6cc\ud06c\ub97c \ucd94\uac00\ud558\uace0\uc790 \ud560 \ub54c\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"params"),"\uc5d0 \ub2e4\uc74c\uc758 \uac1d\uccb4\ub97c \uc778\uc790\ub85c \ub118\uaca8\uc90d\ub2c8\ub2e4. \uc774\ub294 WELLDONE Wallet\uc5d0\uc11c \uc81c\uc548\ud558\ub294 Universal Chain \ud45c\uc900\uc785\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Solana"',title:'"Solana"'},"interface ChainData {\n  chainId: string;\n  chainName: string;\n  rpcUrls: [\n    {\n      providerName: string;\n      url: string;\n    },\n  ];\n  nativeCurrencies: [\n    {\n      name: string;\n      symbol: string;\n      decimals: number;\n    },\n  ];\n  feeCurrencies: [\n    {\n      name: string;\n      symbol: string;\n      decimals: number;\n    },\n  ];\n  // (Optional)\n  blockExplorerUrls: [\n    {\n      name: string;\n      url: string;\n    },\n  ];\n  // (Optional)\n  iconUrls: Array<string>;\n  slip44: string;\n}\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"Solana Devnet \ub124\ud2b8\uc6cc\ud06c\ub97c \ucd94\uac00\ud574\ubcf4\ub294 \uc608\uc81c\ub97c \uac19\uc774 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n",(0,o.kt)("inlineCode",{parentName:"p"},"Add Chain")," \ubc84\ud2bc\uc744 \ub20c\ub7ec WELLDONE Wallet\uc5d0 Solana Devnet \ub124\ud2b8\uc6cc\ud06c\ub97c \ucd94\uac00\ud574\ubcf4\uc138\uc694. ",(0,o.kt)("inlineCode",{parentName:"p"},"dapp:addChain")," \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uae30 \uc804\uc5d0 ",(0,o.kt)("inlineCode",{parentName:"p"},"dapp:accounts")," \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \uba3c\uc800 \uc9c0\uac11\uc5d0 \uc5f0\uacb0\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function addChain() {\n  const chainData = {\n    chainId: 'devnet',\n    chainName: 'Solana Devnet',\n    rpcUrls: [\n      {\n        providerName: 'All That Node',\n        url: 'https://solana-devnet-rpc.allthatnode.com/',\n      },\n    ],\n    nativeCurrencies: [\n      {\n        name: 'Solana',\n        symbol: 'SOL',\n        decimals: 18,\n      },\n    ],\n    feeCurrencies: [\n      {\n        name: 'Solana',\n        symbol: 'SOL',\n        decimals: 18,\n      },\n    ],\n    blockExplorerUrls: [\n      {\n        name: 'Solana Devnet Explorer',\n        url: 'https://explorer.solana.com/?cluster=devnet',\n      },\n    ],\n    iconUrls: [],\n    slip44: '501',\n  };\n\n  async function addChain() {\n    // before adding chain to wallet, you should connect to wallet first\n    const accounts = await window.dapp.request('solana', {\n      method: 'dapp:accounts',\n    });\n    // add chain to wallet\n    const response = await window.dapp.request('solana', {\n      method: 'dapp:addChain',\n      params: [chainData],\n    });\n  }\n  return <Button onClick={addChain}>Add Chain</Button>;\n}\n")))}m.isMDXComponent=!0}}]);