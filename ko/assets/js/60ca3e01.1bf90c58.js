"use strict";(self.webpackChunkwelldone_docs=self.webpackChunkwelldone_docs||[]).push([[161],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),i=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=i(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=i(t),m=r,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(h,s(s({ref:n},p),{},{components:t})):a.createElement(h,s({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var i=2;i<o;i++)s[i]=t[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3584:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return d}});var a=t(3117),r=t(102),o=(t(7294),t(3905)),s=["components"],l={sidebar_position:3,keywords:["\uc6f0\ub358 \uc6d4\ub81b \uba54\uc18c\ub4dc","dapp:accounts","dapp:addChain","dapp:sendTransaction","dapp:getBalance"],description:"dapp provider\uac00 \uc9c0\uc6d0\ud558\ub294 \uba54\uc18c\ub4dc"},c="Methods",i={unversionedId:"provider-api/method",id:"provider-api/method",title:"Methods",description:"dapp provider\uac00 \uc9c0\uc6d0\ud558\ub294 \uba54\uc18c\ub4dc",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/provider-api/method.md",sourceDirName:"provider-api",slug:"/provider-api/method",permalink:"/ko/docs/provider-api/method",draft:!1,editUrl:"https://github.com/welldonestudio/welldonestudio.github.io/tree/master/docs/provider-api/method.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,keywords:["\uc6f0\ub358 \uc6d4\ub81b \uba54\uc18c\ub4dc","dapp:accounts","dapp:addChain","dapp:sendTransaction","dapp:getBalance"],description:"dapp provider\uac00 \uc9c0\uc6d0\ud558\ub294 \uba54\uc18c\ub4dc"},sidebar:"tutorialSidebar",previous:{title:"Chain Names",permalink:"/ko/docs/provider-api/chain-names"},next:{title:"Events",permalink:"/ko/docs/provider-api/events"}},p={},d=[{value:"1. dapp:accounts",id:"account",level:2},{value:"Params",id:"params",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"2. dapp:addChain",id:"addChain",level:2},{value:"Params",id:"params-1",level:3},{value:"Example",id:"example-1",level:3},{value:"3. dapp:sendTransaction",id:"sendTransaction",level:2},{value:"Params",id:"params-2",level:3},{value:"Returns",id:"returns-1",level:3},{value:"Example",id:"example-2",level:3},{value:"4. dapp:getBalance",id:"getBalance",level:2},{value:"Params",id:"params-3",level:3},{value:"Returns",id:"returns-2",level:3},{value:"Example",id:"example-3",level:3}],u={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"methods"},"Methods"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"dapp provider\ub294 \ucd1d 4\uac1c\uc758 \uba54\uc18c\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4."),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#account"},"dapp:accounts")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#addChain"},"dapp:addChain")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sendTransaction"},"dapp:sendTransaction")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#getBalance"},"dapp:getBalance")))),(0,o.kt)("h2",{id:"account"},"1. dapp:accounts"),(0,o.kt)("p",null,"\uc774 \uba54\uc18c\ub4dc\ub294 \uc9c0\uac11 \uc5f0\uacb0\uc744 \uc694\uccad\ud558\ub294 \uba54\uc18c\ub4dc\uc785\ub2c8\ub2e4. \uc774 \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \uc6f9\ud398\uc774\uc9c0\ub294 \uc9c0\uac11\uc5d0 \uc5f0\uacb0\uc744 \uc694\uccad\ud560 \uc218 \uc788\uace0, \uc9c0\uac11\uc758 \uc0ac\uc6a9\uc790\uac00 \uc5f0\uacb0\uc744 \ud5c8\ub77d\ud558\uba74 \uc6f9\ud398\uc774\uc9c0\ub294 \uc0ac\uc6a9\uc790\uc758 \uacc4\uc815\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc18c\ub4dc\ub294 \ubaa8\ub4e0 \uccb4\uc778\uc5d0 \ub300\ud55c \uc5f0\uacb0\uc744 \ud55c \ubc88\uc5d0 \uc694\uccad\ud569\ub2c8\ub2e4. \uc989, ",(0,o.kt)("inlineCode",{parentName:"p"},"chainName"),"\uc5d0 'ethereum'\uc744 \ub123\uc5b4 \uc694\uccad\uc744 \ubcf4\ub0b8 \ud6c4 \uc0ac\uc6a9\uc790\uc758 \ud5c8\ub77d\uc744 \ubc1b\uc73c\uba74 'cosmos'\ub098 \ub2e4\ub978 \uccb4\uc778\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc5f0\uacb0 \ud5c8\ub77d\uc744 \ubc1b\uc740 \uac83\uc785\ub2c8\ub2e4. \uc6f9\ud398\uc774\uc9c0\uac00 \uc9c0\uac11\uc5d0 \uc774\ubbf8 \uc5f0\uacb0\ub41c \uacbd\uc6b0\uc5d0\ub294 \uc0ac\uc6a9\uc790\uc758 \uc0c1\ud638\uc791\uc6a9\uc744 \uc694\uad6c\ud558\uc9c0 \uc54a\uace0 \ubc14\ub85c \uacc4\uc815\uc758 \uc815\ubcf4\ub97c \uac00\uc838\uc635\ub2c8\ub2e4."),(0,o.kt)("h3",{id:"params"},"Params"),(0,o.kt)("p",null,"\uc774 \uba54\uc18c\ub4dc\ub294 \uac00\uc838\uc624\uace0 \uc2f6\uc740 ",(0,o.kt)("inlineCode",{parentName:"p"},"chainName"),"\uac12\ub9cc\uc744 \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"type ChainName = 'celo' | 'cosmos' | 'ethereum' | 'klaytn' | 'near' | 'neon' | 'solana';\n\nwindow.dapp.request(chainName: ChainName, { method: \"dapp:accounts\" })\n")),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("p",null,"\uc774 \uba54\uc18c\ub4dc\ub294 \ud574\ub2f9 \uccb4\uc778 \uacc4\uc815\uc5d0 \ub300\ud55c address\uac12\uacfc pubKey\uac12\uc744 promise \uac1d\uccb4\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4. \ud604\uc7ac WELLDONE Wallet\uc740 \uccb4\uc778 \uc544\uc774\ub514 \ub2f9 \ud558\ub098\uc758 \uc8fc\uc18c/\ud37c\ube14\ub9ad \ud0a4 \ud398\uc5b4\ub9cc \uc9c0\uc6d0\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{ "ethereum": { "address": "0x....", "pubKey": "0x...." } }\n')),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"\uc544\ub798 \uc608\uc81c\ub294 \uc9c0\uac11\uc5d0\uc11c \uc774\ub354\ub9ac\uc6c0 \uccb4\uc778\uc758 \uacc4\uc815 \uc815\ubcf4\ub97c \uc5bb\uc5b4\uc624\ub294 \ucf54\ub4dc\uc785\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function connect() {\n  const [address, setAddress] = React.useState(null);\n  const [pubKey, setPubKey] = React.useState(null);\n  async function getAccounts() {\n    // request connection to WELLDONE extension\n    const accounts = await window.dapp.request('ethereum', {\n      method: 'dapp:accounts',\n    });\n    // check if accounts exists\n    if (Object.keys(accounts).length !== 0) {\n      setAddress(accounts.ethereum.address);\n      setPubKey(accounts.ethereum.pubKey);\n    }\n  }\n  return (\n    <>\n      <Button onClick={getAccounts}>Connect Wallet</Button>\n      {address && (\n        <ResultTooltip style={{ background: '#3B48DF' }}>\n          <b>address: </b> {address} <br />\n          <b>pubKey: </b> {pubKey}\n        </ResultTooltip>\n      )}\n    </>\n  );\n}\n")),(0,o.kt)("h2",{id:"addChain"},"2. dapp:addChain"),(0,o.kt)("p",null,"\uc774 \uba54\uc18c\ub4dc\ub294 \uc9c0\uac11\uc5d0 \ub124\ud2b8\uc6cc\ud06c\ub97c \ucd94\uac00\ud560 \uc218 \uc788\ub294 \uba54\uc18c\ub4dc\uc785\ub2c8\ub2e4. \ud604\uc7ac ",(0,o.kt)("strong",{parentName:"p"},"Ethereum"),", ",(0,o.kt)("strong",{parentName:"p"},"Cosmos"),", ",(0,o.kt)("strong",{parentName:"p"},"Solana")," \uae30\ubc18\uc758 \uccb4\uc778\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"WELLDONE Studio\uc5d0\uc11c\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ucd94\uac00\ud560 \uc218 \uc788\ub294 \uba54\uc18c\ub4dc\ubfd0\ub9cc \uc544\ub2c8\ub77c, \uc0ac\uc774\ud2b8\ub97c \uc774\uc6a9\ud574 \uc9c0\uac11\uc5d0 \ub124\ud2b8\uc6cc\ud06c\ub97c \ucd94\uac00\ud560 \uc218 \uc788\ub3c4\ub85d ",(0,o.kt)("a",{parentName:"p",href:"https://addchain.welldonestudio.io"},"Add Chain"),"\uc744 \uc6b4\uc601\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \uc54c\uace0 \uc2f6\ub2e4\uba74 ",(0,o.kt)("a",{parentName:"p",href:"https://docs.welldonestudio.io/ko/docs/add-chain"},"\uc5ec\uae30"),"\ub97c \ucc38\uace0\ud569\ub2c8\ub2e4.")),(0,o.kt)("h3",{id:"params-1"},"Params"),(0,o.kt)("p",null,"\uc774 \uba54\uc18c\ub4dc\ub294 \ucd94\uac00\ud560 \uccb4\uc778\uc758 \uae30\ubc18\uc774 \ub418\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"chainName"),"\uac12\uacfc, ",(0,o.kt)("inlineCode",{parentName:"p"},"chainData"),"\uac12\uc744 \uc778\uc790\ub85c \ubc1b\uc2b5\ub2c8\ub2e4. \uc544\ub798\uc758 \uccb4\uc778\ubcc4 \uc139\uc158\uc744 \ud1b5\ud574 \uccb4\uc778 \ubcc4\ub85c ",(0,o.kt)("inlineCode",{parentName:"p"},"params"),"\uc5d0 \uc804\ub2ec\ud574\uc57c \ud558\ub294 \ub0b4\uc6a9\uc744 \uc0c1\uc138\ud558\uac8c \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.welldonestudio.io/ko/docs/add-chain/cosmos"},"\ucf54\uc2a4\ubaa8\uc2a4 \uae30\ubc18 \ub124\ud2b8\uc6cc\ud06c")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.welldonestudio.io/ko/docs/add-chain/ethereum"},"\uc774\ub354\ub9ac\uc6c0 \uae30\ubc18 \ub124\ud2b8\uc6cc\ud06c")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.welldonestudio.io/ko/docs/add-chain/solana"},"\uc194\ub77c\ub098 \ubc0f \uadf8\uc678 \ub124\ud2b8\uc6cc\ud06c"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"type ChainName = 'cosmos' | 'ethereum' | 'solana';\n\nawait dapp.request(chainName: ChainName, (\n    method: \"dapp:addChain\",\n    params: [chainData]\n))\n")),(0,o.kt)("h3",{id:"example-1"},"Example"),(0,o.kt)("p",null,"Ethereum \uae30\ubc18\uc758 Ubiq \ub124\ud2b8\uc6cc\ud06c\ub97c \ucd94\uac00\ud574\ubcf4\ub294 \uc608\uc81c\uc785\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function addChain() {\n  // Ethereum based chain parameter Sample - Ubiq\n  const chainData = {\n    chainId: '0x8',\n    chainName: 'Ubiq',\n    rpcUrls: ['https://rpc.octano.dev'],\n    iconUrls: [''],\n    nativeCurrency: {\n      name: 'Ubiq Ether',\n      symbol: 'UBQ',\n      decimals: 18,\n    },\n    blockExplorerUrls: ['https://ubiqscan.io'],\n  };\n\n  async function addChain() {\n    // before adding chain to wallet, you should connect to wallet first\n    const accounts = await window.dapp.request('ethereum', {\n      method: 'dapp:accounts',\n    });\n    // add chain to wallet\n    const response = await window.dapp.request('ethereum', {\n      method: 'dapp:addChain',\n      params: [chainData],\n    });\n  }\n  return <Button onClick={addChain}>Add Chain</Button>;\n}\n")),(0,o.kt)("h2",{id:"sendTransaction"},"3. dapp:sendTransaction"),(0,o.kt)("p",null,"\uc774 \uba54\uc18c\ub4dc\ub294 \ud2b8\ub79c\uc7ad\uc158\uc744 \ubcf4\ub0b4\ub294 \uba54\uc18c\ub4dc\uc785\ub2c8\ub2e4. \uac04\ub2e8\ud55c \ud1a0\ud070 \uc804\uc1a1\ubd80\ud130 \ucee8\ud2b8\ub799\ud2b8 \ubc30\ud3ec, \ube14\ub85d\uccb4\uc778\uc758 \uc0c1\ud0dc \ubcc0\uacbd\uae4c\uc9c0 \uc774 \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("h3",{id:"params-2"},"Params"),(0,o.kt)("p",null,"\ud30c\ub77c\ubbf8\ud130\ub85c\ub294 \ud06c\uac8c ",(0,o.kt)("inlineCode",{parentName:"p"},"CHAIN_NAME"),"\uacfc ",(0,o.kt)("inlineCode",{parentName:"p"},"TRANSACTION_PARAMETER"),"\uac00 \uc788\uc2b5\ub2c8\ub2e4. ",(0,o.kt)("inlineCode",{parentName:"p"},"CHAIN_NAME"),"\uc740 \uc5f0\uacb0\ud558\uace0\uc790 \ud558\ub294 \uccb4\uc778\uc758 \uc774\ub984\uc744, ",(0,o.kt)("inlineCode",{parentName:"p"},"TRANSACTION_PARAMETER"),"\ub294 transaction\uc744 string \ud615\uc73c\ub85c \ubcc0\ud658\ud55c \uac12\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \ub2e4\uc591\ud55c \uccb4\uc778\ub4e4\uc758 transaction \ud3ec\ub9f7\uc774 \uc0c1\uc774\ud558\uae30 \ub54c\ubb38\uc5d0, WELLDONE Wallet\uc5d0\uc11c\ub294 \uc544\ub798\uc640 \uac19\uc774 string \ud615\uc73c\ub85c \ubcc0\ud658\ub41c \ud0c0\uc785\uc744 \uacf5\ud1b5\uc73c\ub85c \ubc1b\uc544 \ud2b8\ub79c\uc7ad\uc158\uc744 \uc804\uc1a1\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"type CHAIN_NAME = 'ethereum' | 'cosmos' | 'near' | 'solana' | 'klaytn' | 'celo' | 'neon';\ntype TRANSACTION_PARAMETER = 'string';\n\nconst response = await dapp.request(CHAIN_NAME, {\n  method: 'dapp:sendTransaction',\n  params: [TRANSACTION_PARAMETER],\n});\n")),(0,o.kt)("p",null,"\uc544\ub798\uc758 \uccb4\uc778\ubcc4 \uc139\uc158\uc744 \ud1b5\ud574 \uccb4\uc778 \ubcc4\ub85c ",(0,o.kt)("inlineCode",{parentName:"p"},"TRANSACTION_PARAMETER"),"\uc5d0 \uc804\ub2ec\ud574\uc57c \ud558\ub294 \ub0b4\uc6a9\uc744 \uc0c1\uc138\ud558\uac8c \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.welldonestudio.io/ko/docs/sending-transaction/ethereum"},"\uc774\ub354\ub9ac\uc6c0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.welldonestudio.io/ko/docs/sending-transaction/cosmos"},"\ucf54\uc2a4\ubaa8\uc2a4")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.welldonestudio.io/ko/docs/sending-transaction/near"},"\ub2c8\uc5b4")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.welldonestudio.io/ko/docs/sending-transaction/klaytn"},"\ud074\ub808\uc774\ud2bc")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.welldonestudio.io/ko/docs/sending-transaction/celo"},"\uc140\ub85c"))),(0,o.kt)("h3",{id:"returns-1"},"Returns"),(0,o.kt)("p",null,"\ud574\ub2f9 \uba54\uc18c\ub4dc\ub294 transaction hash \uac12\uc744 string \ud0c0\uc785\uc758 Promise \uac1d\uccb4\ub85c \ubc18\ud658\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"Promise<string>;\n")),(0,o.kt)("h3",{id:"example-2"},"Example"),(0,o.kt)("p",null,"\uc544\ub798\ub294 \uc774\ub354\ub9ac\uc6c0 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \ud2b8\ub79c\uc7ad\uc158\uc744 \ubcf4\ub0b4\ub294 \uc608\uc81c\uc785\ub2c8\ub2e4. \ud2b8\ub79c\uc7ad\uc158\uc744 \ubcf4\ub0b4\uae30 \uc704\ud574\uc120 faucet\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. ",(0,o.kt)("a",{parentName:"p",href:"https://faucet.egorfine.com/"},"\uc774 \ub9c1\ud06c"),"\ub97c \ud1b5\ud574 Ethereum \ud14c\uc2a4\ud2b8\ub137\uc758 faucet\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function sendTransaction() {\n  const CHAIN_NAME = 'ethereum';\n  const [accounts, setAccounts] = React.useState(null);\n  const [txHash, setTxHash] = React.useState(null);\n\n  async function handleGetAccount() {\n    try {\n      const accounts = await dapp.request(CHAIN_NAME, {\n        method: 'dapp:accounts',\n      });\n\n      setAccounts(accounts[CHAIN_NAME].address);\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n  async function handleSendTransaction() {\n    try {\n      const transactionParameters = {\n        from: accounts,\n        to: '0x08505F42D5666225d5d73B842dAdB87CCA44d1AE', //allthatnode\n        gas: '0x76c0',\n        gasPrice: '0x9184e72a000',\n        value: '0x00',\n        data: '0x6057361d000000000000000000000000000000000000000000000000000000000008a198',\n      };\n      const response = await dapp.request(CHAIN_NAME, {\n        method: 'dapp:sendTransaction',\n        params: [JSON.stringify(transactionParameters)],\n      });\n      const txHash = response.hash;\n\n      setTxHash(txHash);\n    } catch (error) {\n      console.log(error);\n      alert(`Error Message: ${error.message}\\nError Code: ${error.code}`);\n    }\n  }\n\n  return (\n    <>\n      {accounts ? (\n        <>\n          <Button onClick={handleSendTransaction} type=\"button\">\n            Send a Transaction\n          </Button>\n          <ResultTooltip style={{ background: '#3B48DF' }}>\n            <b>Accounts:</b> {accounts}\n          </ResultTooltip>\n        </>\n      ) : (\n        <>\n          <Button onClick={handleGetAccount} type=\"button\">\n            Get Account\n          </Button>\n          <div>You have to get account first!</div>\n        </>\n      )}\n      {txHash && (\n        <ResultTooltip style={{ background: '#F08080' }}>\n          <b>Transaction Hash:</b> {txHash}\n        </ResultTooltip>\n      )}\n    </>\n  );\n}\n")),(0,o.kt)("h2",{id:"getBalance"},"4. dapp:getBalance"),(0,o.kt)("p",null,"\uc774 \uba54\uc18c\ub4dc\ub294 \ud30c\ub77c\ubbf8\ud130\ub85c \ubc1b\uc740 address\uc758 balance\ub97c \ubc18\ud658\ud558\ub294 \uba54\uc18c\ub4dc\uc785\ub2c8\ub2e4."),(0,o.kt)("h3",{id:"params-3"},"Params"),(0,o.kt)("p",null,"\uc774 \uba54\uc18c\ub4dc\ub294 \ud30c\ub77c\ubbf8\ud130\ub85c balance\ub97c \uac00\uc838\uc62c \uccb4\uc778\uacfc \uacc4\uc815 \uc815\ubcf4\ub97c \ubc1b\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"type CHAIN_NAME = 'ethereum' | 'cosmos' | 'near' | 'solana' | 'klaytn' | 'celo' | 'neon';\ntype ACCOUNTS = string;\n\nconst response = await dapp.request(CHAIN_NAME, {\n  method: 'dapp:getBalance',\n  params: [ACCOUNTS],\n});\nconst txHash = response.hash;\n")),(0,o.kt)("h3",{id:"returns-2"},"Returns"),(0,o.kt)("p",null,"\uc774 \uba54\uc18c\ub4dc\ub294 \uccb4\uc778\uc5d0 \ub530\ub77c \ubc18\ud658 \uac12\uc774 \uc0c1\uc774\ud569\ub2c8\ub2e4."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"ethereum, klaytn, celo, neon, near, solana"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"Promise<string>\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"cosmos"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"Promise<[{ ammout: string, denom: string }]>\n")))),(0,o.kt)("h3",{id:"example-3"},"Example"),(0,o.kt)("p",null,"\uc774 \uc608\uc81c\ub294 \uc774\ub354\ub9ac\uc6c0 \uacc4\uc815\uc758 balance\ub97c \uac00\uc838\uc624\ub294 \uc608\uc81c\uc785\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function sendTransaction() {\n  const CHAIN_NAME = 'ethereum';\n  const [accounts, setAccounts] = React.useState(null);\n  const [balance, setBalance] = React.useState(null);\n\n  async function handleGetAccount() {\n    try {\n      const accounts = await dapp.request(CHAIN_NAME, {\n        method: 'dapp:accounts',\n      });\n\n      setAccounts(accounts[CHAIN_NAME].address);\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n  async function handleGetBalance() {\n    try {\n      const response = await dapp.request(CHAIN_NAME, {\n        method: 'dapp:getBalance',\n        params: [accounts],\n      });\n\n      setBalance(response);\n    } catch (error) {\n      console.log(error);\n      alert(`Error Message: ${error.message}\\nError Code: ${error.code}`);\n    }\n  }\n\n  return (\n    <>\n      {accounts ? (\n        <>\n          <Button onClick={handleGetBalance} type=\"button\">\n            Get Balance\n          </Button>\n          <ResultTooltip style={{ background: '#3B48DF' }}>\n            <b>Accounts:</b> {accounts}\n          </ResultTooltip>\n        </>\n      ) : (\n        <>\n          <Button onClick={handleGetAccount} type=\"button\">\n            Get Account\n          </Button>\n          <div>You have to get account first!</div>\n        </>\n      )}\n      {balance && (\n        <ResultTooltip style={{ background: '#F08080' }}>\n          <b>Balance:</b> {balance}\n        </ResultTooltip>\n      )}\n    </>\n  );\n}\n")))}m.isMDXComponent=!0}}]);